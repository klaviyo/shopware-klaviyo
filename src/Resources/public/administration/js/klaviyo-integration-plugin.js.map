{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////var/www/vhosts/7.4/shopware/custom/plugins/OdKlaviyoIntegration/src/Resources/app/administration/src/component/sw-promotion-list-override/index.js","webpack:////var/www/vhosts/7.4/shopware/custom/plugins/OdKlaviyoIntegration/src/Resources/app/administration/src/services/api/klaviyo-historical-events-synchronization-service.js","webpack:////var/www/vhosts/7.4/shopware/custom/plugins/OdKlaviyoIntegration/src/Resources/app/administration/src/services/api/klaviyo-subscribers-synchronization-service.js","webpack:////var/www/vhosts/7.4/shopware/custom/plugins/OdKlaviyoIntegration/src/Resources/app/administration/src/init/klaviyo-synchronization-service-init.js","webpack:////var/www/vhosts/7.4/shopware/custom/plugins/OdKlaviyoIntegration/src/Resources/app/administration/src/app/assets/icons/icons.js","webpack:////var/www/vhosts/7.4/shopware/custom/plugins/OdKlaviyoIntegration/src/Resources/app/administration/src/init/svg-icons.init.js","webpack:////var/www/vhosts/7.4/shopware/custom/plugins/OdKlaviyoIntegration/src/Resources/app/administration/src/product-export-templates/klaviyo/index.js","webpack:////var/www/vhosts/7.4/shopware/custom/plugins/OdKlaviyoIntegration/src/Resources/app/administration/src/module/klaviyo/pages/klaviyo-job-listing/index.js","webpack:////var/www/vhosts/7.4/shopware/custom/plugins/OdKlaviyoIntegration/src/Resources/app/administration/src/module/klaviyo/pages/klaviyo-integration-settings/index.js","webpack:////var/www/vhosts/7.4/shopware/custom/plugins/OdKlaviyoIntegration/src/Resources/app/administration/src/module/klaviyo/components/klaviyo-integration-settings-general/index.js","webpack:////var/www/vhosts/7.4/shopware/custom/plugins/OdKlaviyoIntegration/src/Resources/app/administration/src/module/klaviyo/components/klaviyo-integration-settings-customer/index.js","webpack:////var/www/vhosts/7.4/shopware/custom/plugins/OdKlaviyoIntegration/src/Resources/app/administration/src/module/klaviyo/components/klaviyo-integration-settings-synchronization-control/job-interactor.js","webpack:////var/www/vhosts/7.4/shopware/custom/plugins/OdKlaviyoIntegration/src/Resources/app/administration/src/module/klaviyo/components/klaviyo-integration-settings-synchronization-control/index.js","webpack:////var/www/vhosts/7.4/shopware/custom/plugins/OdKlaviyoIntegration/src/Resources/app/administration/src/module/klaviyo/components/klaviyo-integration-settings-icon/index.js","webpack:////var/www/vhosts/7.4/shopware/custom/plugins/OdKlaviyoIntegration/src/Resources/app/administration/src/module/klaviyo/index.js","webpack:////var/www/vhosts/7.4/shopware/custom/plugins/OdKlaviyoIntegration/src/Resources/app/administration/src/extension/sw-product-deliverability-form/index.js","webpack:////var/www/vhosts/7.4/shopware/custom/plugins/OdKlaviyoIntegration/src/Resources/app/administration/src/module/klaviyo/components/klaviyo-integration-settings-synchronization-control/klaviyo-integration-settings-synchronization-control.html.twig","webpack:////var/www/vhosts/7.4/shopware/custom/plugins/OdKlaviyoIntegration/src/Resources/app/administration/src/module/klaviyo/pages/klaviyo-job-listing/klaviyo-job-listing.html.twig","webpack:////var/www/vhosts/7.4/shopware/custom/plugins/OdKlaviyoIntegration/src/Resources/app/administration/src/module/klaviyo/pages/klaviyo-integration-settings/klaviyo-integration-settings.scss","webpack:////var/www/vhosts/7.4/shopware/custom/plugins/OdKlaviyoIntegration/src/Resources/app/administration/src/module/klaviyo/components/klaviyo-integration-settings-customer/klaviyo-integration-settings-customer.scss","webpack:////var/www/vhosts/7.4/shopware/custom/plugins/OdKlaviyoIntegration/src/Resources/app/administration/src/app/assets/icons/svg sync nonrecursive svg$","webpack:///./node_modules/vue-style-loader/lib/listToStyles.js","webpack:///./node_modules/vue-style-loader/lib/addStylesClient.js","webpack:////var/www/vhosts/7.4/shopware/custom/plugins/OdKlaviyoIntegration/src/Resources/app/administration/src/module/klaviyo/components/klaviyo-integration-settings-icon/klaviyo-integration-settings-icon.html.twig","webpack:////var/www/vhosts/7.4/shopware/custom/plugins/OdKlaviyoIntegration/src/Resources/app/administration/src/extension/sw-product-deliverability-form/sw-product-deliverability-form.html.twig","webpack:////var/www/vhosts/7.4/shopware/custom/plugins/OdKlaviyoIntegration/src/Resources/app/administration/src/product-export-templates/klaviyo/header.xml.twig","webpack:////var/www/vhosts/7.4/shopware/custom/plugins/OdKlaviyoIntegration/src/Resources/app/administration/src/product-export-templates/klaviyo/body.xml.twig","webpack:////var/www/vhosts/7.4/shopware/custom/plugins/OdKlaviyoIntegration/src/Resources/app/administration/src/component/sw-promotion-list-override/sw-promotion-v2-list.html.twig","webpack:////var/www/vhosts/7.4/shopware/custom/plugins/OdKlaviyoIntegration/src/Resources/app/administration/src/module/klaviyo/pages/klaviyo-integration-settings/klaviyo-integration-settings.html.twig","webpack:////var/www/vhosts/7.4/shopware/custom/plugins/OdKlaviyoIntegration/src/Resources/app/administration/src/module/klaviyo/components/klaviyo-integration-settings-general/klaviyo-integration-settings-general.scss","webpack:////var/www/vhosts/7.4/shopware/custom/plugins/OdKlaviyoIntegration/src/Resources/app/administration/src/app/assets/icons/svg/icons-klaviyo-integration.svg","webpack:////var/www/vhosts/7.4/shopware/custom/plugins/OdKlaviyoIntegration/src/Resources/app/administration/src/module/klaviyo/pages/klaviyo-job-listing/klaviyo-job-listing.scss","webpack:////var/www/vhosts/7.4/shopware/custom/plugins/OdKlaviyoIntegration/src/Resources/app/administration/src/module/klaviyo/components/klaviyo-integration-settings-customer/klaviyo-integration-settings-customer.html.twig","webpack:////var/www/vhosts/7.4/shopware/custom/plugins/OdKlaviyoIntegration/src/Resources/app/administration/src/product-export-templates/klaviyo/footer.xml.twig","webpack:////var/www/vhosts/7.4/shopware/custom/plugins/OdKlaviyoIntegration/src/Resources/app/administration/src/module/klaviyo/components/klaviyo-integration-settings-general/klaviyo-integration-settings-general.html.twig"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Shopware","Component","override","template","methods","getExportUrl","Context","api","apiPath","KlaviyoHistoricalEventsSynchronizationApiService","httpClient","loginService","apiEndpoint","headers","this","getBasicHeaders","post","Classes","ApiService","KlaviyoSubscribersSynchronizationApiService","Service","register","container","initContainer","Application","getContainer","context","require","keys","reduce","accumulator","item","component","split","functional","render","createElement","elementContext","data","class","staticClass","style","attrs","on","domProps","innerHTML","push","iconComponents","map","registerProductExportTemplate","translationKey","headerTemplate","header","trim","bodyTemplate","body","footerTemplate","footer","fileName","encoding","fileFormat","generateByCronjob","interval","Criteria","Data","inject","jobItems","isLoading","reloadInterval","showJobInfoModal","showJobSubsModal","currentJobID","showMessagesModal","currentJobMessages","sortType","jobDisplayType","autoLoad","autoLoadIsActive","autoReloadInterval","statusFilterOptions","typeFilterOptions","filterCriteria","defaultFilters","storeKey","activeFilterNumber","searchConfigEntity","showBulkEditModal","hideFilters","computed","jobRepository","repositoryFactory","klaviyoJobTypes","listFilters","filterFactory","type","label","placeholder","valueProperty","labelProperty","options","dateType","fromFieldLabel","toFieldLabel","showTimeframe","created","createdComponent","loadFilterValues","onDisplayModeChange","innerBox","$el","classList","remove","add","$refs","odSidebar","closeSidebar","odFilter","length","resetAll","onRefresh","jobListing","updateCriteria","criteria","page","filterLoading","addFilter","equals","addSorting","sort","equalsAny","search","then","items","statuses","Set","status","types","forEach","$tc","Promise","resolve","catch","Defaults","isSaveSuccessful","privateKeyFilled","publicKeyFilled","listNameFilled","messageBlankErrorState","mappingErrorStates","config","salesChannels","metaInfo","title","$createTitle","salesChannelRepository","privateKeyErrorState","publicKeyErrorState","listNameErrorState","hasError","hasMappingErrors","values","filter","state","undefined","code","watch","handler","channelId","configComponent","selectedSalesChannelId","accountEnabled","deep","getSalesChannels","detail","onChangeLanguage","storefrontSalesChannelTypeId","apiSalesChannelTypeId","res","id","translated","finally","onSave","save","props","actualConfigData","required","allConfigs","String","default","configPrefix","entries","enabled","trackDeletedAccountOrders","trackViewedProduct","trackRecentlyViewedItems","trackAddedToCart","trackStartedCheckout","trackPlacedOrder","trackOrderedProduct","trackFulfilledOrder","trackCancelledOrder","trackRefundedOrder","trackSubscribedToBackInStock","isInitializeKlaviyoAfterInteraction","popUpOpenBtnColor","popUpOpenBtnBgColor","popUpCloseBtnColor","popUpCloseBtnBgColor","subscribeBtnColor","subscribeBtnBgColor","popUpAdditionalClasses","defaultValue","$set","checkTextFieldInheritance","checkBoolFieldInheritance","isSomeMappingsNotFilled","systemCustomFields","configPath","customFieldRepository","customFieldCriteria","addAssociation","noCustomFieldsError","total","customFieldMapping","mappingConfig","every","mappingKey","active","customLabel","$delete","localeIso","app","fallbackLocale","Array","isArray","customFields","processCustomFieldMappings","existingCustomFieldNames","systemFieldNames","systemField","customFieldName","indexOf","systemFieldName","includes","addNewEmptyFieldMapping","getCustomFieldHint","field","generateGuid","s4","Math","floor","random","toString","substring","JobInteractor","apiService","date","isSynchronizationInProgress","isSynchronizationSuccess","promise","scheduleSynchronization","response","isScheduled","error","Mixin","Utils","format","mixins","getByName","historicalEventsJobInteractor","klaviyoHistoricalEventsSynchronizationApiService","subscribersSynchronizationJobInteractor","klaviyoSubscribersSynchronizationApiService","scheduleHistoricalEventsSynchronization","createNotificationSuccess","message","errorCode","createNotificationWarning","createNotificationError","scheduleSubscribersSynchronization","resetSubscribersSynchronizationState","resetSynchronizationState","resetHistoricalEventsSynchronizationState","Module","description","color","icon","snippets","deDE","enGB","routes","index","path","settings","meta","parentPath","settingsItem","group","to","iconComponent","backgroundEnabled","navigation","parent","position","product","stock","klaviyo_back_in_stock_disabled","content","locals","webpackContext","req","webpackContextResolve","e","Error","listToStyles","parentId","list","styles","newStyles","part","css","media","sourceMap","parts","hasDocument","document","DEBUG","stylesInDom","head","getElementsByTagName","singletonElement","singletonCounter","isProduction","noop","ssrIdKey","isOldIE","navigator","test","userAgent","toLowerCase","addStylesClient","_isProduction","_options","addStylesToDom","newList","mayRemove","domStyle","refs","j","addStyle","createStyleElement","styleElement","appendChild","obj","update","querySelector","parentNode","removeChild","styleIndex","applyToSingletonTag","applyToTag","newObj","textStore","replaceText","replacement","Boolean","join","styleSheet","cssText","cssNode","createTextNode","childNodes","insertBefore","setAttribute","ssrId","sources","btoa","unescape","encodeURIComponent","JSON","stringify","firstChild"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,qCAIjBlC,EAAoBA,EAAoBmC,EAAI,Q,24CChFrDC,SAASC,UAAUC,SAAS,uBAAwB,CAChDC,aAEAC,QAAS,CACLC,aADK,WAID,OAFiBL,SAASM,QAAQC,IAAIC,QAEpB,4CCT9B,IAeeC,E,sQAZX,WAAYC,EAAYC,GAAwC,IAAD,EAAzBC,EAAyB,uDAAX,UAAW,kBAC3D,cAAMF,EAAYC,EAAcC,IAC3BrC,KAAO,mDAF+C,E,oDAK/D,WACI,IAAMsC,EAAUC,KAAKC,kBACrB,OAAOD,KAAKJ,WACPM,KAAK,qEAAsE,GAAI,CAACH,iB,8BAXxEb,SAASiB,QAAvBC,Y,4yCCAP,IAeeC,E,sQAZX,WAAYT,EAAYC,GAAwC,IAAD,EAAzBC,EAAyB,uDAAX,UAAW,kBAC3D,cAAMF,EAAYC,EAAcC,IAC3BrC,KAAO,8CAF+C,E,oDAK/D,WACI,IAAMsC,EAAUC,KAAKC,kBACrB,OAAOD,KAAKJ,WACPM,KAAK,uDAAwD,GAAI,CAACH,iB,8BAX1Db,SAASiB,QAAvBC,YCGPlB,SAASoB,UAAUC,SAAS,oDAAoD,SAACC,GAC7E,IAAMC,EAAgBvB,SAASwB,YAAYC,aAAa,QACxD,OAAO,IAAIhB,EAAiDc,EAAcb,WAAYY,EAAUX,iBAEpGX,SAASoB,UAAUC,SAAS,+CAA+C,SAACC,GACxE,IAAMC,EAAgBvB,SAASwB,YAAYC,aAAa,QACxD,OAAO,IAAIN,EAA4CI,EAAcb,WAAYY,EAAUX,iBCThF,IACLe,EADK,GACLA,EAAUC,WAEDC,OAAOC,QAAO,SAACC,EAAaC,GACvC,IACMC,EAAY,CACdzD,KAFkBwD,EAAKE,MAAM,KAAK,GAAGA,MAAM,KAAK,GAGhDC,YAAY,EACZC,OAHc,SAGPC,EAAeC,GAClB,IAAMC,EAAOD,EAAeC,KAE5B,OAAOF,EAAc,OAAQ,CACzBG,MAAO,CAACD,EAAKE,YAAaF,EAAKC,OAC/BE,MAAOH,EAAKG,MACZC,MAAOJ,EAAKI,MACZC,GAAIL,EAAKK,GACTC,SAAU,CACNC,UAAWnB,EAAQK,QAOnC,OADAD,EAAYgB,KAAKd,GACVF,IACR,ICvBC7B,EAAcD,SAAdC,U,GAGG8C,EAAeC,KAAI,SAAChB,GACvB,OAAO/B,EAAUoB,SAASW,EAAUzD,KAAMyD,M,8DCFlDhC,SAASoB,QAAQ,yBAAyB6B,8BAA8B,CACpE1E,KAAM,uBACN2E,eAAgB,6FAChBC,eAAgBC,IAAOC,OACvBC,aAAcC,IACdC,eAAgBC,IAAOJ,OACvBK,SAAU,cACVC,SAAU,QACVC,WAAY,MACZC,mBAAmB,EACnBC,SAAU,Q,gyBCXd,IAAO7D,EAAaD,SAAbC,UACA8D,EAAY/D,SAASgE,KAArBD,SAEP9D,EAAUoB,SAAS,sBAAuB,CACtClB,aAEA8D,OAAQ,CACJ,sBACA,oBACA,gBACA,WAGJ3B,KAVsC,WAWlC,MAAO,CACH4B,SAAU,KACVC,WAAW,EACXC,eAAgB,KAChBC,kBAAkB,EAClBC,kBAAkB,EAClBC,aAAc,KACdC,mBAAmB,EACnBC,mBAAoB,KACpBC,SAAU,SACVC,eAAgB,KAChBC,UAAU,EACVC,kBAAkB,EAClBC,mBAAoB,IACpBC,oBAAqB,GACrBC,kBAAmB,GACnBC,eAAgB,GAChBC,eAAgB,CACZ,oBACA,kBACA,mBAEJC,SAAU,kBACVC,mBAAoB,EACpBC,mBAAoB,mBACpBC,mBAAmB,EACnBC,aAAa,IAIrBC,SAAU,CACNC,cADM,WAEF,OAAO3E,KAAK4E,kBAAkBpG,OAAO,qBAGzCqG,gBALM,WAMF,MAAO,CACH,iCACA,qCACA,qCACA,0CACA,sCACA,gCACA,uCAIRC,YAjBM,WAkBF,OAAO9E,KAAK+E,cAAcvG,OAAO,mBAAoB,CACjD,oBAAqB,CACjBK,SAAU,SACVmG,KAAM,sBACNC,MAAO,aACPC,YAAa,mBACbC,cAAe,QACfC,cAAe,OACfC,QAASrF,KAAKiE,qBAElB,kBAAmB,CACfpF,SAAU,OACVmG,KAAM,sBACNC,MAAO,WACPC,YAAa,iBACbC,cAAe,QACfC,cAAe,OACfC,QAASrF,KAAKkE,mBAElB,kBAAmB,CACfrF,SAAU,YACVoG,MAAO,iBACPK,SAAU,iBACVC,eAAgB,OAChBC,aAAc,KACdC,eAAe,OAM/BC,QA1FsC,WA2FlC1F,KAAK2F,oBAGTrG,QAAS,CACLqG,iBADK,WAED3F,KAAK4F,oBAGTC,oBALK,SAKexH,GAChB,IAAIyH,EAAW9F,KAAK+F,IAGpB,GAFAD,EAASE,UAAUC,OAAO,aAEb,SAAT5H,EAQA,OAPAyH,EAASE,UAAUE,IAAI,aACvBlG,KAAKmG,MAAMC,UAAUC,eAEkB,IAAnCrG,KAAKmG,MAAMG,SAASP,IAAIQ,QACxBvG,KAAKmG,MAAMG,SAASE,WAGjBxG,KAAKyE,aAAc,EAG9BzE,KAAKyE,aAAc,EACnBzE,KAAK4F,oBAGTa,UAxBK,WAyBDzG,KAAKmG,MAAMO,WAAWD,UAAUzG,KAAKmE,gBACrCnE,KAAK4F,oBAGTe,eA7BK,SA6BUC,GACX5G,KAAK6G,KAAO,EACZ7G,KAAKmE,eAAiByC,EACtB5G,KAAKsE,mBAAqBsC,EAASL,QAGvCX,iBAnCK,WAmCe,IAAD,OACf5F,KAAK8G,eAAgB,EAErB,IAAMF,EAAW,IAAI3D,EAarB,OAZA2D,EAASG,UAAU9D,EAAS+D,OAAO,WAAY,OAC/CJ,EAASK,WAAWhE,EAASiE,KAAK,YAAa,QAAQ,IACvDN,EAASG,UAAU9D,EAASkE,UAAU,OAAQ,CAC1C,iCACA,qCACA,qCACA,0CACA,sCACA,gCACA,wCAGGnH,KAAK2E,cAAcyC,OAAOR,EAAU1H,SAASM,QAAQC,KAAK4H,MAAK,SAACC,GACnE,IAAMC,EAAQ,EAAO,IAAIC,IAAIF,EAAMpF,KAAI,SAAAjB,GAAI,OAAIA,EAAKwG,YAC9CC,EAAK,EAAO,IAAIF,IAAIF,EAAMpF,KAAI,SAAAjB,GAAI,OAAIA,EAAKxD,UAqBjD,OAnBA,EAAKwG,oBAAsB,GAC3B,EAAKC,kBAAoB,GAEzBqD,EAASI,SAAQ,SAACF,GACd,EAAKxD,oBAAoBjC,KAAK,CAC1BvE,KAAM,EAAKmK,IAAI,4CAA8CH,GAC7DtJ,MAAOsJ,OAIfC,EAAMC,SAAQ,SAAC3C,GACX,EAAKd,kBAAkBlC,KAAK,CACxBvE,KAAMuH,EACN7G,MAAO6G,OAIf,EAAK8B,eAAgB,EAEde,QAAQC,aAChBC,OAAM,WACL,EAAKjB,eAAgB,S,yBC7KrC,G,UAA8B5H,UAAvBC,EAAP,EAAOA,UAAW6I,EAAlB,EAAkBA,SACX/E,EAAY/D,SAASgE,KAArBD,SAEP9D,EAAUoB,SAAS,+BAAgC,CAC/ClB,aAEA8D,OAAQ,CACJ,qBAGJ3B,KAP+C,WAQ3C,MAAO,CACH6B,WAAW,EACX4E,kBAAkB,EAClBC,kBAAkB,EAClBC,iBAAiB,EACjBC,gBAAgB,EAChBC,uBAAwB,KACxBC,mBAAoB,GACpBC,OAAQ,KACRC,cAAe,KAIvBC,SArB+C,WAsB3C,MAAO,CACHC,MAAO1I,KAAK2I,iBAIpBjD,QA3B+C,WA4B3C1F,KAAK2F,oBAGTjB,SAAU,CACNkE,uBADM,WAEF,OAAO5I,KAAK4E,kBAAkBpG,OAAO,kBAGzCqK,qBALM,WAMF,OAAI7I,KAAKkI,iBACE,KAGJlI,KAAKqI,wBAGhBS,oBAbM,WAcF,OAAI9I,KAAKmI,gBACE,KAGJnI,KAAKqI,wBAGhBU,mBArBM,WAsBF,OAAI/I,KAAKoI,eACE,KAGJpI,KAAKqI,wBAGhBW,SA7BM,WA8BF,IAAMC,EAEU,IAFSrL,OAAOsL,OAAOlJ,KAAKsI,oBACvCa,QAAO,SAACC,GAAD,YAA0BC,IAAfD,EAAME,QACxB/C,OAEL,OAAQvG,KAAKkI,mBACLlI,KAAKmI,kBACLnI,KAAKoI,gBACNa,IAIfM,MAAO,CACHhB,OAAQ,CACJiB,QADI,WAEA,IAAMC,EAAYzJ,KAAKmG,MAAMuD,gBAAgBC,uBACvCC,IAAmB5J,KAAKuI,OAAO,2CAEnB,OAAdkB,GAAsBG,GACtB5J,KAAKkI,mBAAqBlI,KAAKuI,OAAO,iDACtCvI,KAAKmI,kBAAoBnI,KAAKuI,OAAO,gDACrCvI,KAAKoI,iBAAmBpI,KAAKuI,OAAO,kEAEpCvI,KAAKkI,iBAAmBlI,KAAKmI,gBAAkBnI,KAAKoI,gBAAiB,GAG7EyB,MAAM,IAIdvK,QAAS,CACLqG,iBADK,WAED3F,KAAK8J,mBAEL9J,KAAKqI,uBAAyB,CAC1BiB,KAAM,EACNS,OAAQ/J,KAAK4H,IAAI,sEAIzBoC,iBAVK,WAWDhK,KAAK8J,oBAGTA,iBAdK,WAce,IAAD,OACf9J,KAAKqD,WAAY,EAEjB,IAAMuD,EAAW,IAAI3D,EACrB2D,EAASG,UAAU9D,EAASkE,UAAU,SAAU,CAC5Ca,EAASiC,6BACTjC,EAASkC,yBAGblK,KAAK4I,uBAAuBxB,OAAOR,EAAU1H,SAASM,QAAQC,KAAK4H,MAAK,SAAA8C,GACpEA,EAAIjE,IAAI,CACJkE,GAAI,KACJC,WAAY,CACR5M,KAAM,EAAKmK,IAAI,iDAIvB,EAAKY,cAAgB2B,KACtBG,SAAQ,WACP,EAAKjH,WAAY,MAIzBkH,OArCK,WAqCK,IAAD,OACDvK,KAAKgJ,WAIThJ,KAAKqD,WAAY,EAEjBrD,KAAKmG,MAAMuD,gBAAgBc,OAAOnD,MAAK,WACnC,EAAKY,kBAAmB,KACzBqC,SAAQ,WACP,EAAKjH,WAAY,U,2+BC5IbnE,SAAbC,UAEGoB,SAAS,uCAAwC,CACvDlB,aAEAoL,MAAO,CACHC,iBAAkB,CACd1F,KAAMpH,OACN+M,UAAU,GAEdC,WAAY,CACR5F,KAAMpH,OACN+M,UAAU,GAEdhB,uBAAwB,CACpB3E,KAAM6F,OACNF,UAAU,EACVG,QAAS,MAEbjC,qBAAsB,CAClB7D,KAAMpH,OACN+M,UAAU,EACVG,QAAS,MAEbhC,oBAAqB,CACjB9D,KAAMpH,OACN+M,UAAU,EACVG,QAAS,MAEb/B,mBAAoB,CAChB/D,KAAMpH,OACN+M,UAAU,EACVG,QAAS,OAIjBtJ,KAlCuD,WAmCnD,MAAO,CACH6B,WAAW,IAInBqC,QAxCuD,WAyCnD1F,KAAK2F,oBAGTrG,QAAS,CACLqG,iBADK,WA6BD,IA3BA,IAAMoF,EAAe,mCA2BrB,MAAkCnN,OAAOoN,QA1BpB,CACbC,SAAS,EACTC,2BAA2B,EAC3BC,oBAAoB,EACpBC,0BAA0B,EAC1BC,kBAAkB,EAClBC,sBAAsB,EACtBC,kBAAkB,EAClBC,qBAAqB,EACrBC,qBAAqB,EACrBC,qBAAqB,EACrBC,oBAAoB,EACpBC,8BAA8B,EAC9BC,qCAAqC,EACrCC,kBAAmB,GACnBC,oBAAqB,GACrBC,mBAAoB,GACpBC,qBAAsB,GACtBC,kBAAmB,GACnBC,oBAAqB,GACrBC,uBAAwB,KAMhC,eAAkE,CAA7D,gBAAO3N,EAAP,KAAY4N,EAAZ,UACmDhD,IAAhDrJ,KAAK4K,WAAL,KAAwBG,EAAetM,IACvCuB,KAAKsM,KAAKtM,KAAK4K,WAAL,KAAyBG,EAAetM,EAAK4N,KAKnEE,0BApCK,SAoCqBpO,GACtB,MAAqB,iBAAVA,GAIJA,EAAMoI,QAAU,GAG3BiG,0BA5CK,SA4CqBrO,GACtB,MAAwB,kBAAVA,M,yBC3F1B,G,UAA6Be,UAAtBC,EAAP,EAAOA,UAAWK,EAAlB,EAAkBA,QACXyD,EAAY/D,SAASgE,KAArBD,SAEP9D,EAAUoB,SAAS,wCAAyC,CACxDlB,aAEAoL,MAAO,CACHG,WAAY,CACR5F,KAAMpH,OACN+M,UAAU,GAEdrC,mBAAoB,CAChBtD,KAAMpH,OACN+M,UAAU,IAIlBxH,OAAQ,CACJ,qBAGJuC,QAlBwD,WAmBpD1F,KAAK2F,oBAGTnE,KAtBwD,WAuBpD,MAAO,CACH6B,WAAW,EACXoJ,yBAAyB,EACzBC,mBAAoB,KAEpBC,WAAY,yDAIpBjI,SAAU,CACNkI,sBADM,WAEF,OAAO5M,KAAK4E,kBAAkBpG,OAAO,iBAGzCqO,oBALM,WAMF,IAAMjG,EAAW,IAAI3D,EAMrB,OALA2D,EAASK,WAAWhE,EAASiE,KAAK,OAAQ,OAAO,IACjDN,EAASG,UAAU9D,EAAS+D,OAAO,sCAAuC,aAC1EJ,EAASG,UAAU9D,EAAS+D,OAAO,SAAU,IAC7CJ,EAASkG,eAAe,kBAEjBlG,GAGXmG,oBAfM,WAgBF,OAAsC,IAAlC/M,KAAK0M,mBAAmBM,MACjBhN,KAAK4H,IAAI,2EAGb,MAGXqF,mBAAoB,CAChBlP,IAAK,WACD,OAAOiC,KAAK4K,WAAL,KAAwB5K,KAAK2M,eAKhDpD,MAAO,CACH0D,mBAAoB,CAChBzD,QADgB,WACL,IAAD,OACA0D,EAAgBlN,KAAK4K,WAAL,KAAwB5K,KAAK2M,YAEnD/O,OAAOkD,KAAKoM,GAAeC,OAAM,SAACC,GAS9B,OARIF,EAAcE,GAAYC,SAAWH,EAAcE,GAAYE,YAC/D,EAAKhB,KAAK,EAAKhE,mBAAoB8E,EAAY,CAC3C9D,KAAM,EACNS,OAAQ,EAAKnC,IAAI,4EAGrB,EAAK2F,QAAQ,EAAKjF,mBAAoB8E,IAEnC,MAGfvD,MAAM,IAIdvK,QAAS,CACLqG,iBADK,WACe,IAAD,OACf3F,KAAKqD,WAAY,EACjBrD,KAAKwN,UAAYhO,EAAQiO,IAAIC,qBAEGrE,IAA5BrJ,KAAKiN,oBAAoCU,MAAMC,QAAQ5N,KAAKiN,sBAI5DjN,KAAKsM,KAAKtM,KAAK4K,WAAL,KAAyB5K,KAAK2M,WAAY,IAGxD3M,KAAK4M,sBAAsBxF,OAAOpH,KAAK6M,oBAAqBrN,EAAQC,KAC/D4H,MAAK,SAACwG,GACH,EAAKnB,mBAAqBmB,KAE7BvD,SAAQ,WACL,EAAKwD,6BACL,EAAKzK,WAAY,MAI7ByK,2BAtBK,WAsByB,IAAD,OACrBC,EAA2B,GACzBC,EAAmBhO,KAAK0M,mBAAmBxK,KAAI,SAAC+L,GAAD,OAAiBA,EAAYxQ,QAElFG,OAAOkD,KAAKd,KAAKiN,oBAAoBtF,SAAQ,SAAAyF,GACrC,EAAKH,mBAAmBG,GAAYC,SAAW,EAAKJ,mBAAmBG,GAAYE,YACnF,EAAKhB,KAAK,EAAKhE,mBAAoB8E,EAAY,CAC3C9D,KAAM,EACNS,OAAQ,EAAKnC,IAAI,4EAGrB,EAAK0E,KAAK,EAAKhE,mBAAoB8E,EAAY,IAGnDW,EAAyB/L,KAAK,EAAKiL,mBAAmBG,GAAYc,kBAEwB,IAAtFF,EAAiBG,QAAQ,EAAKlB,mBAAmBG,GAAxB,mBACzB,EAAKG,QAAQ,EAAKjF,mBAAoB8E,GACtC,EAAKG,QAAQ,EAAKN,mBAAoBG,OAI9CY,EAAiBrG,SAAQ,SAACyG,GACjBL,EAAyBM,SAASD,IACnC,EAAKE,wBAAwB,EAAK5B,mBAAmBvD,QAAO,SAAC8E,GAAD,OAAiBA,EAAYxQ,OAAS2Q,KAAiB,QAK/HG,mBAnDK,SAmDcnB,GAAa,IAAD,QACrBgB,EAAkBpO,KAAKiN,mBAAmBG,GAAxB,gBAClBa,EAAW,UAAGjO,KAAK0M,mBAAmBvD,QAAO,SAAC8E,GAAD,OAAiBA,EAAYxQ,OAAS2Q,KAAiB,UAAzF,QAA+F,GAEhH,2BAAOH,SAAP,UAAOA,EAAa1F,cAApB,aAAO,EAAqBtD,MAAMjF,KAAKwN,kBAAvC,QAAqDS,aAArD,EAAqDA,EAAaxQ,YAAlE,QAA0E,eAG9E6Q,wBA1DK,SA0DmBE,GACpB,IAAMpB,EAAa,WAAapN,KAAKyO,eACrCzO,KAAKsM,KAAKtM,KAAKiN,mBAAoBG,EAAY,CAC3CE,YAAa,GACbY,gBAAiBM,EAAM/Q,KACvB4P,QAAQ,IAEZrN,KAAKsM,KAAKtM,KAAKsI,mBAAoB8E,EAAY,KAGnDqB,aApEK,WAqED,IAAIC,EAAK,WACL,OAAOC,KAAKC,MAA4B,OAArB,EAAID,KAAKE,WACvBC,SAAS,IACTC,UAAU,IAGnB,OAAOL,IAAOA,IAAO,IAAMA,IAAO,IAAMA,IAAO,IAAMA,IAAO,IAAMA,IAAOA,IAAOA,Q,oMCrI7EM,G,WA9BX,WAAYC,EAAYC,I,4FAAO,SAC3BlP,KAAKiP,WAAaA,EAClBjP,KAAKmP,6BAA8B,EACnCnP,KAAKoP,0BAA2B,EAChCpP,KAAKkP,KAAOA,E,8DAMhB,WACI,IAAMG,EAAUrP,KAAKiP,WAAWK,0BAWhC,OATAtP,KAAKmP,6BAA8B,EACnCE,EAAQhI,KAAK,SAAUkI,GACnBvP,KAAKoP,2BAA6BG,EAAS/N,KAAKgO,aAClD9Q,KAAKsB,OAAO+H,MAAM,SAAU0H,GAC1BzP,KAAKoP,0BAA2B,GAClC1Q,KAAKsB,OAAOsK,QAAQ,WAClBtK,KAAKmP,6BAA8B,GACrCzQ,KAAKsB,OAEAqP,I,uCAGX,WACIrP,KAAKmP,6BAA8B,EACnCnP,KAAKoP,0BAA2B,O,kCCzBxC,GAA2BlQ,SAApBC,GAAP,GAAOA,UAAWuQ,GAAlB,GAAkBA,MACXR,GAAQhQ,SAASyQ,MAAMC,OAAvBV,KAEP/P,GAAUoB,SAAS,uDAAwD,CACvElB,aAEA8D,OAAQ,CACJ,mDACA,+CAGJ0M,OAAQ,CACJH,GAAMI,UAAU,iBAGpBtO,KAZuE,WAsBnE,MAAO,CACHuO,8BAVkC,IAAIf,GACtChP,KAAKgQ,iDACLd,IASAe,wCAP4C,IAAIjB,GAChDhP,KAAKkQ,4CACLhB,MASR5P,QAAS,CACL6Q,wCADK,WAEenQ,KAAK+P,8BAA8BT,0BAC3CjI,KAAK,SAAUkI,GACfA,EAAS/N,KAAKgO,YACdxP,KAAKoQ,0BAA0B,CAC3BC,QAASrQ,KAAK4H,IACV,4FAG2B,uCAA5B2H,EAAS/N,KAAK8O,UACrBtQ,KAAKuQ,0BAA0B,CAC3BF,QAASrQ,KAAK4H,IACV,+FAG2B,yCAA5B2H,EAAS/N,KAAK8O,UACrBtQ,KAAKuQ,0BAA0B,CAC3BF,QAASrQ,KAAK4H,IACV,iGAIR5H,KAAKuQ,0BAA0B,CAC3BF,QAASrQ,KAAK4H,IACV,4FAIdlJ,KAAKsB,OAAO+H,MAAM,SAAU0H,GAC1BzP,KAAKwQ,wBAAwB,CACzBH,QAASrQ,KAAK4H,IACV,4FAGVlJ,KAAKsB,QAEXyQ,mCArCK,WAsCezQ,KAAKiQ,wCAAwCX,0BAErDjI,KAAK,SAAUkI,GACfA,EAAS/N,KAAKgO,YACdxP,KAAKoQ,0BAA0B,CAC3BC,QAASrQ,KAAK4H,IACV,6EAG2B,uCAA5B2H,EAAS/N,KAAK8O,UACrBtQ,KAAKuQ,0BAA0B,CAC3BF,QAASrQ,KAAK4H,IACV,gFAG2B,yCAA5B2H,EAAS/N,KAAK8O,UACrBtQ,KAAKuQ,0BAA0B,CAC3BF,QAASrQ,KAAK4H,IACV,kFAIR5H,KAAKuQ,0BAA0B,CAC3BF,QAASrQ,KAAK4H,IACV,6EAIdlJ,KAAKsB,OAAO+H,MAAM,WAChB/H,KAAKwQ,wBAAwB,CACzBH,QAASrQ,KAAK4H,IACV,6EAGVlJ,KAAKsB,QAEX0Q,qCA1EK,WA2ED1Q,KAAKiQ,wCAAwCU,6BAEjDC,0CA7EK,WA8ED5Q,KAAK+P,8BAA8BY,gC,4BC9GzBzR,SAAdC,UAEEoB,SAAS,oCAAqC,CACpDlB,gB,8BCKaH,SAAV2R,OAEAtQ,SAAS,iBAAkB,CAC9ByE,KAAM,SACN0D,MAAO,qCACPoI,YAAa,0CACbC,MAAO,UACPC,KAAM,0BAENC,SAAU,CACN,QAASC,GACT,QAASC,IAGbC,OAAQ,CACJC,MAAO,CACHnQ,UAAW,sBACXoQ,KAAM,SAEVC,SAAU,CACNrQ,UAAW,+BACXoQ,KAAM,WACNE,KAAM,CACFC,WAAY,+BAKxBC,aAAc,CACVC,MAAO,UACPC,GAAI,0BACJ3M,MAAO,qCACP4M,cAAe,oCACfC,mBAAmB,GAGvBC,WAAY,CACR,CACI3H,GAAI,UACJnF,MAAO,iCACP8L,MAAO,UACPC,KAAM,0BACNgB,OAAQ,eACRV,KAAM,uBACNW,SAAU,Q,4BCpDA/S,SAAdC,UAEEC,SAAS,iCAAkC,CACjDC,cAEAC,QAAS,CACLqG,iBADK,gBAEiC,IAAvB3F,KAAKkS,QAAQC,QACpBnS,KAAKkS,QAAQC,MAAQ,GAGrBnS,KAAKkS,UACAlS,KAAKkS,QAAQrE,eACd7N,KAAKkS,QAAQrE,aAAe,IAG3B7N,KAAKkS,QAAQrE,aAAauE,iCAC3BpS,KAAKkS,QAAQrE,aAAauE,gCAAiC,S,mBCnB/EnV,EAAOD,QAAU,8iD,mBCAjBC,EAAOD,QAAU,ygD,qBCGjB,IAAIqV,EAAU,EAAQ,QACA,iBAAZA,IAAsBA,EAAU,CAAC,CAACpV,EAAOC,EAAImV,EAAS,MAC7DA,EAAQC,SAAQrV,EAAOD,QAAUqV,EAAQC,SAG/BpM,EADH,EAAQ,QAAyJ4E,SAC1J,WAAYuH,GAAS,EAAM,K,4CCL5C,IAAIA,EAAU,EAAQ,QACA,iBAAZA,IAAsBA,EAAU,CAAC,CAACpV,EAAOC,EAAImV,EAAS,MAC7DA,EAAQC,SAAQrV,EAAOD,QAAUqV,EAAQC,SAG/BpM,EADH,EAAQ,QAAyJ4E,SAC1J,WAAYuH,GAAS,EAAM,K,4CCR5C,IAAInQ,EAAM,CACT,kCAAmC,QAIpC,SAASqQ,EAAeC,GACvB,IAAIpI,EAAKqI,EAAsBD,GAC/B,OAAO1V,EAAoBsN,GAE5B,SAASqI,EAAsBD,GAC9B,IAAI1V,EAAoBa,EAAEuE,EAAKsQ,GAAM,CACpC,IAAIE,EAAI,IAAIC,MAAM,uBAAyBH,EAAM,KAEjD,MADAE,EAAEpJ,KAAO,mBACHoJ,EAEP,OAAOxQ,EAAIsQ,GAEZD,EAAezR,KAAO,WACrB,OAAOlD,OAAOkD,KAAKoB,IAEpBqQ,EAAezK,QAAU2K,EACzBxV,EAAOD,QAAUuV,EACjBA,EAAenI,GAAK,Q,kCClBL,SAASwI,EAAcC,EAAUC,GAG9C,IAFA,IAAIC,EAAS,GACTC,EAAY,GACP9V,EAAI,EAAGA,EAAI4V,EAAKvM,OAAQrJ,IAAK,CACpC,IAAI+D,EAAO6R,EAAK5V,GACZkN,EAAKnJ,EAAK,GAIVgS,EAAO,CACT7I,GAAIyI,EAAW,IAAM3V,EACrBgW,IALQjS,EAAK,GAMbkS,MALUlS,EAAK,GAMfmS,UALcnS,EAAK,IAOhB+R,EAAU5I,GAGb4I,EAAU5I,GAAIiJ,MAAMrR,KAAKiR,GAFzBF,EAAO/Q,KAAKgR,EAAU5I,GAAM,CAAEA,GAAIA,EAAIiJ,MAAO,CAACJ,KAKlD,OAAOF,E,+CCjBT,IAAIO,EAAkC,oBAAbC,SAEzB,GAAqB,oBAAVC,OAAyBA,QAC7BF,EACH,MAAM,IAAIX,MACV,2JAkBJ,IAAIc,EAAc,GAQdC,EAAOJ,IAAgBC,SAASG,MAAQH,SAASI,qBAAqB,QAAQ,IAC9EC,EAAmB,KACnBC,EAAmB,EACnBC,GAAe,EACfC,EAAO,aACP1O,EAAU,KACV2O,EAAW,kBAIXC,EAA+B,oBAAdC,WAA6B,eAAeC,KAAKD,UAAUE,UAAUC,eAE3E,SAASC,EAAiBzB,EAAUC,EAAMyB,EAAeC,GACtEV,EAAeS,EAEflP,EAAUmP,GAAY,GAEtB,IAAIzB,EAASH,EAAaC,EAAUC,GAGpC,OAFA2B,EAAe1B,GAER,SAAiB2B,GAEtB,IADA,IAAIC,EAAY,GACPzX,EAAI,EAAGA,EAAI6V,EAAOxM,OAAQrJ,IAAK,CACtC,IAAI+D,EAAO8R,EAAO7V,IACd0X,EAAWnB,EAAYxS,EAAKmJ,KACvByK,OACTF,EAAU3S,KAAK4S,GAEbF,EAEFD,EADA1B,EAASH,EAAaC,EAAU6B,IAGhC3B,EAAS,GAEX,IAAS7V,EAAI,EAAGA,EAAIyX,EAAUpO,OAAQrJ,IAAK,CACzC,IAAI0X,EACJ,GAAsB,KADlBA,EAAWD,EAAUzX,IACZ2X,KAAY,CACvB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAASvB,MAAM9M,OAAQuO,IACzCF,EAASvB,MAAMyB,YAEVrB,EAAYmB,EAASxK,OAMpC,SAASqK,EAAgB1B,GACvB,IAAK,IAAI7V,EAAI,EAAGA,EAAI6V,EAAOxM,OAAQrJ,IAAK,CACtC,IAAI+D,EAAO8R,EAAO7V,GACd0X,EAAWnB,EAAYxS,EAAKmJ,IAChC,GAAIwK,EAAU,CACZA,EAASC,OACT,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAASvB,MAAM9M,OAAQuO,IACzCF,EAASvB,MAAMyB,GAAG7T,EAAKoS,MAAMyB,IAE/B,KAAOA,EAAI7T,EAAKoS,MAAM9M,OAAQuO,IAC5BF,EAASvB,MAAMrR,KAAK+S,EAAS9T,EAAKoS,MAAMyB,KAEtCF,EAASvB,MAAM9M,OAAStF,EAAKoS,MAAM9M,SACrCqO,EAASvB,MAAM9M,OAAStF,EAAKoS,MAAM9M,YAEhC,CACL,IAAI8M,EAAQ,GACZ,IAASyB,EAAI,EAAGA,EAAI7T,EAAKoS,MAAM9M,OAAQuO,IACrCzB,EAAMrR,KAAK+S,EAAS9T,EAAKoS,MAAMyB,KAEjCrB,EAAYxS,EAAKmJ,IAAM,CAAEA,GAAInJ,EAAKmJ,GAAIyK,KAAM,EAAGxB,MAAOA,KAK5D,SAAS2B,IACP,IAAIC,EAAe1B,SAASjS,cAAc,SAG1C,OAFA2T,EAAajQ,KAAO,WACpB0O,EAAKwB,YAAYD,GACVA,EAGT,SAASF,EAAUI,GACjB,IAAIC,EAAQnP,EACRgP,EAAe1B,SAAS8B,cAAc,SAAWrB,EAAW,MAAQmB,EAAI/K,GAAK,MAEjF,GAAI6K,EAAc,CAChB,GAAInB,EAGF,OAAOC,EAOPkB,EAAaK,WAAWC,YAAYN,GAIxC,GAAIhB,EAAS,CAEX,IAAIuB,EAAa3B,IACjBoB,EAAerB,IAAqBA,EAAmBoB,KACvDI,EAASK,EAAoB/W,KAAK,KAAMuW,EAAcO,GAAY,GAClEvP,EAASwP,EAAoB/W,KAAK,KAAMuW,EAAcO,GAAY,QAGlEP,EAAeD,IACfI,EAASM,EAAWhX,KAAK,KAAMuW,GAC/BhP,EAAS,WACPgP,EAAaK,WAAWC,YAAYN,IAMxC,OAFAG,EAAOD,GAEA,SAAsBQ,GAC3B,GAAIA,EAAQ,CACV,GAAIA,EAAOzC,MAAQiC,EAAIjC,KACnByC,EAAOxC,QAAUgC,EAAIhC,OACrBwC,EAAOvC,YAAc+B,EAAI/B,UAC3B,OAEFgC,EAAOD,EAAMQ,QAEb1P,KAKN,IACM2P,EADFC,GACED,EAAY,GAET,SAAUvE,EAAOyE,GAEtB,OADAF,EAAUvE,GAASyE,EACZF,EAAUzM,OAAO4M,SAASC,KAAK,QAI1C,SAASP,EAAqBR,EAAc5D,EAAOpL,EAAQkP,GACzD,IAAIjC,EAAMjN,EAAS,GAAKkP,EAAIjC,IAE5B,GAAI+B,EAAagB,WACfhB,EAAagB,WAAWC,QAAUL,EAAYxE,EAAO6B,OAChD,CACL,IAAIiD,EAAU5C,SAAS6C,eAAelD,GAClCmD,EAAapB,EAAaoB,WAC1BA,EAAWhF,IAAQ4D,EAAaM,YAAYc,EAAWhF,IACvDgF,EAAW9P,OACb0O,EAAaqB,aAAaH,EAASE,EAAWhF,IAE9C4D,EAAaC,YAAYiB,IAK/B,SAAST,EAAYT,EAAcE,GACjC,IAAIjC,EAAMiC,EAAIjC,IACVC,EAAQgC,EAAIhC,MACZC,EAAY+B,EAAI/B,UAiBpB,GAfID,GACF8B,EAAasB,aAAa,QAASpD,GAEjC9N,EAAQmR,OACVvB,EAAasB,aAAavC,EAAUmB,EAAI/K,IAGtCgJ,IAGFF,GAAO,mBAAqBE,EAAUqD,QAAQ,GAAK,MAEnDvD,GAAO,uDAAyDwD,KAAKC,SAASC,mBAAmBC,KAAKC,UAAU1D,MAAgB,OAG9H6B,EAAagB,WACfhB,EAAagB,WAAWC,QAAUhD,MAC7B,CACL,KAAO+B,EAAa8B,YAClB9B,EAAaM,YAAYN,EAAa8B,YAExC9B,EAAaC,YAAY3B,SAAS6C,eAAelD,O,mBC3NrDjW,EAAOD,QAAU,0I,mlMCAjBC,EAAOD,QAAU,yX,mBCAjBC,EAAOD,QAAU,mK,mBCAjBC,EAAOD,QAAU,2pC,mBCAjBC,EAAOD,QAAU,sT,kiMCAjBC,EAAOD,QAAU,i/K,4CCGjB,IAAIqV,EAAU,EAAQ,QACA,iBAAZA,IAAsBA,EAAU,CAAC,CAACpV,EAAOC,EAAImV,EAAS,MAC7DA,EAAQC,SAAQrV,EAAOD,QAAUqV,EAAQC,SAG/BpM,EADH,EAAQ,QAAyJ4E,SAC1J,WAAYuH,GAAS,EAAM,K,mBCR5CpV,EAAOD,QAAU,0lE,qBCGjB,IAAIqV,EAAU,EAAQ,QACA,iBAAZA,IAAsBA,EAAU,CAAC,CAACpV,EAAOC,EAAImV,EAAS,MAC7DA,EAAQC,SAAQrV,EAAOD,QAAUqV,EAAQC,SAG/BpM,EADH,EAAQ,QAAyJ4E,SAC1J,WAAYuH,GAAS,EAAM,K,mBCR5CpV,EAAOD,QAAU,orD,mBCAjBC,EAAOD,QAAU,yB,mBCAjBC,EAAOD,QAAU","file":"static/js/klaviyo-integration-plugin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/bundles/klaviyointegrationplugin/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"53b2\");\n","import template from './sw-promotion-v2-list.html.twig';\n\nShopware.Component.override('sw-promotion-v2-list', {\n    template,\n\n    methods: {\n        getExportUrl() {\n            const basePath = Shopware.Context.api.apiPath;\n\n            return basePath + '/klaviyo/integration/promotion/export';\n        }\n    }\n});","const {ApiService} = Shopware.Classes;\n\nclass KlaviyoHistoricalEventsSynchronizationApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'klaviyo') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'klaviyoHistoricalEventsSynchronizationApiService';\n    }\n\n    scheduleSynchronization() {\n        const headers = this.getBasicHeaders();\n        return this.httpClient\n            .post('_action/klaviyo/historical-event-tracking/synchronization/schedule', {}, {headers});\n    }\n}\n\nexport default KlaviyoHistoricalEventsSynchronizationApiService;\n","const {ApiService} = Shopware.Classes;\n\nclass KlaviyoSubscribersSynchronizationApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'klaviyo') {\n        super(httpClient, loginService, apiEndpoint);\n        this.name = 'klaviyoSubscribersSynchronizationApiService';\n    }\n\n    scheduleSynchronization() {\n        const headers = this.getBasicHeaders();\n        return this.httpClient\n            .post('_action/klaviyo/subscribers/synchronization/schedule', {}, {headers});\n    }\n}\n\nexport default KlaviyoSubscribersSynchronizationApiService;\n","import KlaviyoHistoricalEventsSynchronizationApiService from '../services/api/klaviyo-historical-events-synchronization-service'\nimport KlaviyoSubscribersSynchronizationApiService from \"../services/api/klaviyo-subscribers-synchronization-service\";\n\nShopware.Service().register('klaviyoHistoricalEventsSynchronizationApiService', (container) => {\n    const initContainer = Shopware.Application.getContainer('init');\n    return new KlaviyoHistoricalEventsSynchronizationApiService(initContainer.httpClient, container.loginService);\n});\nShopware.Service().register('klaviyoSubscribersSynchronizationApiService', (container) => {\n    const initContainer = Shopware.Application.getContainer('init');\n    return new KlaviyoSubscribersSynchronizationApiService(initContainer.httpClient, container.loginService);\n});\n","export default (() => {\n    const context = require.context('./svg', false, /svg$/);\n\n    return context.keys().reduce((accumulator, item) => {\n        const componentName = item.split('.')[1].split('/')[1];\n        const component = {\n            name: componentName,\n            functional: true,\n            render(createElement, elementContext) {\n                const data = elementContext.data;\n\n                return createElement('span', {\n                    class: [data.staticClass, data.class],\n                    style: data.style,\n                    attrs: data.attrs,\n                    on: data.on,\n                    domProps: {\n                        innerHTML: context(item),\n                    },\n                });\n            },\n        };\n\n        accumulator.push(component);\n        return accumulator;\n    }, []);\n})();\n","import iconComponents from '../app/assets/icons/icons';\n\nconst { Component } = Shopware;\n\nexport default (() => {\n    return iconComponents.map((component) => {\n        return Component.register(component.name, component);\n    });\n})();\n","import header from './header.xml.twig';\nimport body from './body.xml.twig';\nimport footer from './footer.xml.twig';\n\nShopware.Service('exportTemplateService').registerProductExportTemplate({\n    name: 'klaviyo-product-feed',\n    translationKey: 'klaviyo_integration_plugin.productComparison.templates.template-label.klaviyo-product-feed',\n    headerTemplate: header.trim(),\n    bodyTemplate: body,\n    footerTemplate: footer.trim(),\n    fileName: 'klaviyo.xml',\n    encoding: 'UTF-8',\n    fileFormat: 'xml',\n    generateByCronjob: false,\n    interval: 86400,\n});\n","import template from './klaviyo-job-listing.html.twig';\nimport './klaviyo-job-listing.scss';\n\nconst {Component} = Shopware;\nconst {Criteria} = Shopware.Data;\n\nComponent.register('klaviyo-job-listing', {\n    template,\n\n    inject: [\n        'OdRescheduleService',\n        'repositoryFactory',\n        'filterFactory',\n        'feature'\n    ],\n\n    data() {\n        return {\n            jobItems: null,\n            isLoading: false,\n            reloadInterval: null,\n            showJobInfoModal: false,\n            showJobSubsModal: false,\n            currentJobID: null,\n            showMessagesModal: false,\n            currentJobMessages: null,\n            sortType: 'status',\n            jobDisplayType: null,\n            autoLoad: false,\n            autoLoadIsActive: false,\n            autoReloadInterval: 60000,\n            statusFilterOptions: [],\n            typeFilterOptions: [],\n            filterCriteria: [],\n            defaultFilters: [\n                'job-status-filter',\n                'job-type-filter',\n                'job-date-filter'\n            ],\n            storeKey: 'klaviyo_filters',\n            activeFilterNumber: 0,\n            searchConfigEntity: 'od_scheduler_job',\n            showBulkEditModal: false,\n            hideFilters: false\n        }\n    },\n\n    computed: {\n        jobRepository() {\n            return this.repositoryFactory.create('od_scheduler_job');\n        },\n\n        klaviyoJobTypes() {\n            return [\n                'od-klaviyo-events-sync-handler',\n                'od-klaviyo-cart-event-sync-handler',\n                'od-klaviyo-full-order-sync-handler',\n                'od-klaviyo-full-subscriber-sync-handler',\n                'od-klaviyo-order-event-sync-handler',\n                'od-klaviyo-order-sync-handler',\n                'od-klaviyo-subscriber-sync-handler'\n            ];\n        },\n\n        listFilters() {\n            return this.filterFactory.create('od_scheduler_job', {\n                'job-status-filter': {\n                    property: 'status',\n                    type: 'multi-select-filter',\n                    label: 'Job Status',\n                    placeholder: 'Select status...',\n                    valueProperty: 'value',\n                    labelProperty: 'name',\n                    options: this.statusFilterOptions\n                },\n                'job-type-filter': {\n                    property: 'name',\n                    type: 'multi-select-filter',\n                    label: 'Job Type',\n                    placeholder: 'Select type...',\n                    valueProperty: 'value',\n                    labelProperty: 'name',\n                    options: this.typeFilterOptions\n                },\n                'job-date-filter': {\n                    property: 'createdAt',\n                    label: 'Job Created At',\n                    dateType: 'datetime-local',\n                    fromFieldLabel: 'From',\n                    toFieldLabel: 'To',\n                    showTimeframe: true,\n                },\n            });\n        }\n    },\n\n    created() {\n        this.createdComponent()\n    },\n\n    methods: {\n        createdComponent() {\n            this.loadFilterValues();\n        },\n\n        onDisplayModeChange(mode) {\n            let innerBox = this.$el;\n            innerBox.classList.remove('no-filter');\n\n            if (mode !== 'list') {\n                innerBox.classList.add('no-filter');\n                this.$refs.odSidebar.closeSidebar();\n\n                if (this.$refs.odFilter.$el.length !== 0) {\n                    this.$refs.odFilter.resetAll();\n                }\n\n                return this.hideFilters = true\n            }\n\n            this.hideFilters = false;\n            this.loadFilterValues();\n        },\n\n        onRefresh() {\n            this.$refs.jobListing.onRefresh(this.filterCriteria);\n            this.loadFilterValues();\n        },\n\n        updateCriteria(criteria) {\n            this.page = 1;\n            this.filterCriteria = criteria;\n            this.activeFilterNumber = criteria.length;\n        },\n\n        loadFilterValues() {\n            this.filterLoading = true;\n\n            const criteria = new Criteria();\n            criteria.addFilter(Criteria.equals('parentId', null));\n            criteria.addSorting(Criteria.sort('createdAt', 'DESC', false));\n            criteria.addFilter(Criteria.equalsAny('type', [\n                'od-klaviyo-events-sync-handler',\n                'od-klaviyo-cart-event-sync-handler',\n                'od-klaviyo-full-order-sync-handler',\n                'od-klaviyo-full-subscriber-sync-handler',\n                'od-klaviyo-order-event-sync-handler',\n                'od-klaviyo-order-sync-handler',\n                'od-klaviyo-subscriber-sync-handler'\n            ]));\n\n            return this.jobRepository.search(criteria, Shopware.Context.api).then((items) => {\n                const statuses = [...new Set(items.map(item => item.status))];\n                const types = [...new Set(items.map(item => item.name))];\n\n                this.statusFilterOptions = [];\n                this.typeFilterOptions = [];\n\n                statuses.forEach((status) => {\n                    this.statusFilterOptions.push({\n                        name: this.$tc('job-listing.page.listing.grid.job-status.' + status),\n                        value: status\n                    })\n                })\n\n                types.forEach((type) => {\n                    this.typeFilterOptions.push({\n                        name: type,\n                        value: type\n                    })\n                })\n\n                this.filterLoading = false;\n\n                return Promise.resolve();\n            }).catch(() => {\n                this.filterLoading = false;\n            });\n        },\n    }\n});\n","import template from './klaviyo-integration-settings.html.twig';\nimport './klaviyo-integration-settings.scss';\n\nconst {Component, Defaults} = Shopware;\nconst {Criteria} = Shopware.Data;\n\nComponent.register('klaviyo-integration-settings', {\n    template,\n\n    inject: [\n        'repositoryFactory',\n    ],\n\n    data() {\n        return {\n            isLoading: false,\n            isSaveSuccessful: false,\n            privateKeyFilled: false,\n            publicKeyFilled: false,\n            listNameFilled: false,\n            messageBlankErrorState: null,\n            mappingErrorStates: {},\n            config: null,\n            salesChannels: []\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle()\n        };\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    computed: {\n        salesChannelRepository() {\n            return this.repositoryFactory.create('sales_channel');\n        },\n\n        privateKeyErrorState() {\n            if (this.privateKeyFilled) {\n                return null;\n            }\n\n            return this.messageBlankErrorState;\n        },\n\n        publicKeyErrorState() {\n            if (this.publicKeyFilled) {\n                return null;\n            }\n\n            return this.messageBlankErrorState;\n        },\n\n        listNameErrorState() {\n            if (this.listNameFilled) {\n                return null;\n            }\n\n            return this.messageBlankErrorState;\n        },\n\n        hasError() {\n            const hasMappingErrors = Object.values(this.mappingErrorStates)\n                .filter((state) => state.code !== undefined)\n                .length !== 0;\n\n            return !this.privateKeyFilled\n                || !this.publicKeyFilled\n                || !this.listNameFilled\n                || hasMappingErrors;\n        }\n    },\n\n    watch: {\n        config: {\n            handler() {\n                const channelId = this.$refs.configComponent.selectedSalesChannelId;\n                const accountEnabled = !!this.config['KlaviyoIntegrationPlugin.config.enabled'];\n\n                if (channelId !== null && accountEnabled) {\n                    this.privateKeyFilled = !!this.config['KlaviyoIntegrationPlugin.config.privateApiKey'];\n                    this.publicKeyFilled = !!this.config['KlaviyoIntegrationPlugin.config.publicApiKey'];\n                    this.listNameFilled = !!this.config['KlaviyoIntegrationPlugin.config.klaviyoListForSubscribersSync'];\n                } else {\n                    this.privateKeyFilled = this.publicKeyFilled = this.listNameFilled = true;\n                }\n            },\n            deep: true,\n        },\n    },\n\n    methods: {\n        createdComponent() {\n            this.getSalesChannels();\n\n            this.messageBlankErrorState = {\n                code: 1,\n                detail: this.$tc('klaviyo-integration-settings.configs.credentials.messageNotBlank'),\n            };\n        },\n\n        onChangeLanguage() {\n            this.getSalesChannels();\n        },\n\n        getSalesChannels() {\n            this.isLoading = true;\n\n            const criteria = new Criteria();\n            criteria.addFilter(Criteria.equalsAny('typeId', [\n                Defaults.storefrontSalesChannelTypeId,\n                Defaults.apiSalesChannelTypeId,\n            ]));\n\n            this.salesChannelRepository.search(criteria, Shopware.Context.api).then(res => {\n                res.add({\n                    id: null,\n                    translated: {\n                        name: this.$tc('sw-sales-channel-switch.labelDefaultOption'),\n                    },\n                });\n\n                this.salesChannels = res;\n            }).finally(() => {\n                this.isLoading = false;\n            });\n        },\n\n        onSave() {\n            if (this.hasError) {\n                return;\n            }\n\n            this.isLoading = true;\n\n            this.$refs.configComponent.save().then(() => {\n                this.isSaveSuccessful = true;\n            }).finally(() => {\n                this.isLoading = false;\n            });\n        }\n    }\n});\n","import template from './klaviyo-integration-settings-general.html.twig';\nimport './klaviyo-integration-settings-general.scss';\n\nconst {Component} = Shopware;\n\nComponent.register('klaviyo-integration-settings-general', {\n    template,\n\n    props: {\n        actualConfigData: {\n            type: Object,\n            required: true,\n        },\n        allConfigs: {\n            type: Object,\n            required: true,\n        },\n        selectedSalesChannelId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n        privateKeyErrorState: {\n            type: Object,\n            required: false,\n            default: null,\n        },\n        publicKeyErrorState: {\n            type: Object,\n            required: false,\n            default: null,\n        },\n        listNameErrorState: {\n            type: Object,\n            required: false,\n            default: null,\n        },\n    },\n\n    data() {\n        return {\n            isLoading: false,\n        };\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            const configPrefix = 'KlaviyoIntegrationPlugin.config.',\n                defaultConfigs = {\n                    enabled: false,\n                    trackDeletedAccountOrders: false,\n                    trackViewedProduct: true,\n                    trackRecentlyViewedItems: true,\n                    trackAddedToCart: true,\n                    trackStartedCheckout: true,\n                    trackPlacedOrder: true,\n                    trackOrderedProduct: true,\n                    trackFulfilledOrder: true,\n                    trackCancelledOrder: true,\n                    trackRefundedOrder: true,\n                    trackSubscribedToBackInStock: true,\n                    isInitializeKlaviyoAfterInteraction: true,\n                    popUpOpenBtnColor: '',\n                    popUpOpenBtnBgColor: '',\n                    popUpCloseBtnColor: '',\n                    popUpCloseBtnBgColor: '',\n                    subscribeBtnColor: '',\n                    subscribeBtnBgColor: '',\n                    popUpAdditionalClasses: '',\n                };\n\n            /**\n             * Initialize config data with default values.\n             */\n            for (const [key, defaultValue] of Object.entries(defaultConfigs)) {\n                if (this.allConfigs['null'][configPrefix + key] === undefined) {\n                    this.$set(this.allConfigs['null'], configPrefix + key, defaultValue);\n                }\n            }\n        },\n\n        checkTextFieldInheritance(value) {\n            if (typeof value !== 'string') {\n                return true;\n            }\n\n            return value.length <= 0;\n        },\n\n        checkBoolFieldInheritance(value) {\n            return typeof value !== 'boolean';\n        }\n    },\n});\n","import template from './klaviyo-integration-settings-customer.html.twig';\nimport './klaviyo-integration-settings-customer.scss';\n\nconst {Component, Context} = Shopware;\nconst {Criteria} = Shopware.Data;\n\nComponent.register('klaviyo-integration-settings-customer', {\n    template,\n\n    props: {\n        allConfigs: {\n            type: Object,\n            required: true,\n        },\n        mappingErrorStates: {\n            type: Object,\n            required: true,\n        }\n    },\n\n    inject: [\n        'repositoryFactory',\n    ],\n\n    created() {\n        this.createdComponent();\n    },\n\n    data() {\n        return {\n            isLoading: false,\n            isSomeMappingsNotFilled: false,\n            systemCustomFields: null,\n            // mappingErrorStates: {},\n            configPath: 'KlaviyoIntegrationPlugin.config.customerFieldMapping'\n        }\n    },\n\n    computed: {\n        customFieldRepository() {\n            return this.repositoryFactory.create('custom_field');\n        },\n\n        customFieldCriteria() {\n            const criteria = new Criteria();\n            criteria.addSorting(Criteria.sort('name', 'ASC', true));\n            criteria.addFilter(Criteria.equals('customFieldSet.relations.entityName', 'customer'));\n            criteria.addFilter(Criteria.equals('active', 1));\n            criteria.addAssociation('customFieldSet');\n\n            return criteria;\n        },\n\n        noCustomFieldsError() {\n            if (this.systemCustomFields.total === 0) {\n                return this.$tc('klaviyo-integration-settings.customer.fieldMapping.noMappingFieldsError');\n            }\n\n            return null;\n        },\n\n        customFieldMapping: {\n            get: function () {\n                return this.allConfigs['null'][this.configPath];\n            }\n        }\n    },\n\n    watch: {\n        customFieldMapping: {\n            handler() {\n                const mappingConfig = this.allConfigs['null'][this.configPath];\n\n                Object.keys(mappingConfig).every((mappingKey) => {\n                    if (mappingConfig[mappingKey].active && !mappingConfig[mappingKey].customLabel) {\n                        this.$set(this.mappingErrorStates, mappingKey, {\n                            code: 1,\n                            detail: this.$tc('klaviyo-integration-settings.customer.fieldMapping.labelNotFilledError'),\n                        });\n                    } else {\n                        this.$delete(this.mappingErrorStates, mappingKey);\n                    }\n                    return true;\n                });\n            },\n            deep: true,\n        },\n    },\n\n    methods: {\n        createdComponent() {\n            this.isLoading = true;\n            this.localeIso = Context.app.fallbackLocale;\n\n            if (this.customFieldMapping === undefined || Array.isArray(this.customFieldMapping)) {\n                /**\n                 * Initialize configuration.\n                 */\n                this.$set(this.allConfigs['null'], this.configPath, {});\n            }\n\n            this.customFieldRepository.search(this.customFieldCriteria, Context.api)\n                .then((customFields) => {\n                    this.systemCustomFields = customFields;\n                })\n                .finally(() => {\n                    this.processCustomFieldMappings();\n                    this.isLoading = false;\n                });\n        },\n\n        processCustomFieldMappings() {\n            let existingCustomFieldNames = [];\n            const systemFieldNames = this.systemCustomFields.map((systemField) => systemField.name);\n\n            Object.keys(this.customFieldMapping).forEach(mappingKey => {\n                if (this.customFieldMapping[mappingKey].active && !this.customFieldMapping[mappingKey].customLabel) {\n                    this.$set(this.mappingErrorStates, mappingKey, {\n                        code: 1,\n                        detail: this.$tc('klaviyo-integration-settings.customer.fieldMapping.labelNotFilledError'),\n                    });\n                } else {\n                    this.$set(this.mappingErrorStates, mappingKey, {});\n                }\n\n                existingCustomFieldNames.push(this.customFieldMapping[mappingKey].customFieldName);\n\n                if (systemFieldNames.indexOf(this.customFieldMapping[mappingKey]['customFieldName']) === -1) {\n                    this.$delete(this.mappingErrorStates, mappingKey);\n                    this.$delete(this.customFieldMapping, mappingKey);\n                }\n            });\n\n            systemFieldNames.forEach((systemFieldName) => {\n                if (!existingCustomFieldNames.includes(systemFieldName)) {\n                    this.addNewEmptyFieldMapping(this.systemCustomFields.filter((systemField) => systemField.name === systemFieldName)[0]);\n                }\n            });\n        },\n\n        getCustomFieldHint(mappingKey) {\n            const systemFieldName = this.customFieldMapping[mappingKey]['customFieldName'];\n            const systemField = this.systemCustomFields.filter((systemField) => systemField.name === systemFieldName)[0] ?? {};\n\n            return systemField?.config?.label[this.localeIso] ?? systemField?.name ?? '<not_found>';\n        },\n\n        addNewEmptyFieldMapping(field) {\n            const mappingKey = 'mapping_' + this.generateGuid();\n            this.$set(this.customFieldMapping, mappingKey, {\n                customLabel: '',\n                customFieldName: field.name,\n                active: false\n            });\n            this.$set(this.mappingErrorStates, mappingKey, {});\n        },\n\n        generateGuid() {\n            let s4 = () => {\n                return Math.floor((1 + Math.random()) * 0x10000)\n                    .toString(16)\n                    .substring(1);\n            }\n\n            return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n        }\n    },\n});\n","class JobInteractor {\n    constructor(apiService, date) {\n        this.apiService = apiService;\n        this.isSynchronizationInProgress = false;\n        this.isSynchronizationSuccess = false;\n        this.date = date;\n    }\n\n    /**\n     * @returns {Promise}\n     */\n    scheduleSynchronization() {\n        const promise = this.apiService.scheduleSynchronization();\n\n        this.isSynchronizationInProgress = true;\n        promise.then(function (response) {\n            this.isSynchronizationSuccess = !!response.data.isScheduled;\n        }.bind(this)).catch(function (error) {\n            this.isSynchronizationSuccess = false;\n        }.bind(this)).finally(function () {\n            this.isSynchronizationInProgress = false\n        }.bind(this));\n\n        return promise;\n    }\n\n    resetSynchronizationState() {\n        this.isSynchronizationInProgress = false;\n        this.isSynchronizationSuccess = false;\n    }\n}\nexport default JobInteractor;\n","import template from './klaviyo-integration-settings-synchronization-control.html.twig';\nimport JobInteractor from './job-interactor';\n\nconst {Component, Mixin} = Shopware;\nconst {date} = Shopware.Utils.format;\n\nComponent.register('klaviyo-integration-settings-synchronization-control', {\n    template,\n\n    inject: [\n        'klaviyoHistoricalEventsSynchronizationApiService',\n        'klaviyoSubscribersSynchronizationApiService',\n    ],\n\n    mixins: [\n        Mixin.getByName('notification')\n    ],\n\n    data() {\n        const historicalEventsJobInteractor = new JobInteractor(\n            this.klaviyoHistoricalEventsSynchronizationApiService,\n            date\n        );\n        const subscribersSynchronizationJobInteractor = new JobInteractor(\n            this.klaviyoSubscribersSynchronizationApiService,\n            date\n        );\n\n        return {\n            historicalEventsJobInteractor: historicalEventsJobInteractor,\n            subscribersSynchronizationJobInteractor: subscribersSynchronizationJobInteractor,\n        }\n    },\n\n    methods: {\n        scheduleHistoricalEventsSynchronization() {\n            const promise = this.historicalEventsJobInteractor.scheduleSynchronization();\n            promise.then(function (response) {\n                if (response.data.isScheduled) {\n                    this.createNotificationSuccess({\n                        message: this.$tc(\n                            'klaviyo_integration_plugin.historical_events_tracking.schedule_synchronization.success'\n                        )\n                    });\n                } else if (response.data.errorCode === 'SYNCHRONIZATION_IS_ALREADY_RUNNING') {\n                    this.createNotificationWarning({\n                        message: this.$tc(\n                            'klaviyo_integration_plugin.historical_events_tracking.schedule_synchronization.is_running'\n                        )\n                    });\n                } else if (response.data.errorCode === 'SYNCHRONIZATION_IS_ALREADY_SCHEDULED') {\n                    this.createNotificationWarning({\n                        message: this.$tc(\n                            'klaviyo_integration_plugin.historical_events_tracking.schedule_synchronization.is_scheduled'\n                        )\n                    });\n                } else {\n                    this.createNotificationWarning({\n                        message: this.$tc(\n                            'klaviyo_integration_plugin.historical_events_tracking.schedule_synchronization.failed'\n                        )\n                    });\n                }\n            }.bind(this)).catch(function (error) {\n                this.createNotificationError({\n                    message: this.$tc(\n                        'klaviyo_integration_plugin.historical_events_tracking.schedule_synchronization.failed'\n                    )\n                });\n            }.bind(this));\n        },\n        scheduleSubscribersSynchronization() {\n            const promise = this.subscribersSynchronizationJobInteractor.scheduleSynchronization();\n\n            promise.then(function (response) {\n                if (response.data.isScheduled) {\n                    this.createNotificationSuccess({\n                        message: this.$tc(\n                            'klaviyo_integration_plugin.subscribers.schedule_synchronization.success'\n                        )\n                    });\n                } else if (response.data.errorCode === 'SYNCHRONIZATION_IS_ALREADY_RUNNING') {\n                    this.createNotificationWarning({\n                        message: this.$tc(\n                            'klaviyo_integration_plugin.subscribers.schedule_synchronization.is_running'\n                        )\n                    });\n                } else if (response.data.errorCode === 'SYNCHRONIZATION_IS_ALREADY_SCHEDULED') {\n                    this.createNotificationWarning({\n                        message: this.$tc(\n                            'klaviyo_integration_plugin.subscribers.schedule_synchronization.is_scheduled'\n                        )\n                    });\n                } else {\n                    this.createNotificationWarning({\n                        message: this.$tc(\n                            'klaviyo_integration_plugin.subscribers.schedule_synchronization.failed'\n                        )\n                    });\n                }\n            }.bind(this)).catch(function () {\n                this.createNotificationError({\n                    message: this.$tc(\n                        'klaviyo_integration_plugin.subscribers.schedule_synchronization.failed'\n                    )\n                });\n            }.bind(this));\n        },\n        resetSubscribersSynchronizationState() {\n            this.subscribersSynchronizationJobInteractor.resetSynchronizationState();\n        },\n        resetHistoricalEventsSynchronizationState() {\n            this.historicalEventsJobInteractor.resetSynchronizationState();\n        },\n    }\n});\n","import template from './klaviyo-integration-settings-icon.html.twig';\n\nconst { Component } = Shopware;\n\nComponent.register('klaviyo-integration-settings-icon', {\n    template,\n});\n","import './pages/klaviyo-job-listing';\nimport './pages/klaviyo-integration-settings';\nimport './components/klaviyo-integration-settings-general';\nimport './components/klaviyo-integration-settings-customer';\nimport './components/klaviyo-integration-settings-synchronization-control';\nimport './components/klaviyo-integration-settings-icon';\n\nimport deDE from './snippet/de-DE.json';\nimport enGB from './snippet/en-GB.json';\n\nconst {Module} = Shopware;\n\nModule.register('klaviyo-plugin', {\n    type: 'plugin',\n    title: 'klaviyo-integration-settings.title',\n    description: 'klaviyo-job-listing.general.description',\n    color: '#F88962',\n    icon: 'default-avatar-multiple',\n\n    snippets: {\n        'de-DE': deDE,\n        'en-GB': enGB\n    },\n\n    routes: {\n        index: {\n            component: 'klaviyo-job-listing',\n            path: 'index'\n        },\n        settings: {\n            component: 'klaviyo-integration-settings',\n            path: 'settings',\n            meta: {\n                parentPath: 'sw.settings.index.plugins'\n            }\n        }\n    },\n\n    settingsItem: {\n        group: 'plugins',\n        to: 'klaviyo.plugin.settings',\n        label: \"klaviyo-integration-settings.label\",\n        iconComponent: 'klaviyo-integration-settings-icon',\n        backgroundEnabled: true\n    },\n\n    navigation: [\n        {\n            id: 'klaviyo',\n            label: 'klaviyo-job-listing.menu.title',\n            color: '#F88962',\n            icon: 'default-avatar-multiple',\n            parent: 'sw-marketing',\n            path: 'klaviyo.plugin.index',\n            position: 100\n        }\n    ],\n})\n","import template from './sw-product-deliverability-form.html.twig';\n\nconst { Component } = Shopware;\n\nComponent.override('sw-product-deliverability-form', {\n    template,\n\n    methods: {\n        createdComponent() {\n            if (typeof this.product.stock === 'undefined') {\n                this.product.stock = 0;\n            }\n\n            if (this.product) {\n                if (!this.product.customFields) {\n                    this.product.customFields = {};\n                }\n\n                if (!this.product.customFields.klaviyo_back_in_stock_disabled) {\n                    this.product.customFields.klaviyo_back_in_stock_disabled = false;\n                }\n            }\n        }\n    }\n});\n","module.exports = \"{% block klaviyo_integration_settings_synchronization_control %}\\n    <div class=\\\"klaviyo-integration-settings-synchronization-control\\\">\\n\\n        {% block klaviyo_integration_settings_synchronization_control_historical_events_tracking %}\\n            <sw-button-process variant=\\\"ghost\\\"\\n                               :isLoading=\\\"historicalEventsJobInteractor.isSynchronizationInProgress\\\"\\n                               :processSuccess=\\\"historicalEventsJobInteractor.isSynchronizationSuccess\\\"\\n                               @click=\\\"scheduleHistoricalEventsSynchronization\\\"\\n                               @process-finish=\\\"resetHistoricalEventsSynchronizationState\\\">\\n                {{ $tc('klaviyo_integration_plugin.historical_events_tracking.schedule_synchronization.button_label') }}\\n            </sw-button-process>\\n        {% endblock %}\\n\\n        {% block klaviyo_integration_settings_synchronization_control_subscribers %}\\n            <sw-button-process variant=\\\"ghost\\\"\\n                               :isLoading=\\\"subscribersSynchronizationJobInteractor.isSynchronizationInProgress\\\"\\n                               :processSuccess=\\\"subscribersSynchronizationJobInteractor.isSynchronizationSuccess\\\"\\n                               @click=\\\"scheduleSubscribersSynchronization\\\"\\n                               @process-finish=\\\"resetSubscribersSynchronizationState\\\">\\n                {{ $tc('klaviyo_integration_plugin.subscribers.schedule_synchronization.button_label') }}\\n            </sw-button-process>\\n        {% endblock %}\\n\\n    </div>\\n{% endblock %}\\n\";","module.exports = \"{% block job_listing_page %}\\n    <sw-page class=\\\"klaviyo-job-list\\\">\\n        <template slot=\\\"content\\\">\\n            <od-job-listing-index ref=\\\"jobListing\\\"\\n                                  :filterCriteria=\\\"filterCriteria\\\"\\n                                  @job-display-type-changed=\\\"onDisplayModeChange\\\"\\n                                  :jobTypes=\\\"klaviyoJobTypes\\\">\\n            </od-job-listing-index>\\n        </template>\\n        <template #sidebar>\\n            <sw-sidebar ref=\\\"odSidebar\\\">\\n                {% block od_klaviyo_jobs_list_sidebar_refresh %}\\n                    <sw-sidebar-item\\n                            icon=\\\"default-arrow-360-left\\\"\\n                            :title=\\\"$tc('sw-product.list.titleSidebarItemRefresh')\\\"\\n                            @click=\\\"onRefresh\\\"></sw-sidebar-item>\\n                {% endblock %}\\n\\n                {% block od_klaviyo_jobs_list_sidebar_filters %}\\n                    <sw-sidebar-filter-panel ref=\\\"odFilter\\\"\\n                            :hidden=\\\"hideFilters\\\"\\n                            entity=\\\"od_scheduler_job\\\"\\n                            :store-key=\\\"storeKey\\\"\\n                            :filters=\\\"listFilters\\\"\\n                            :defaults=\\\"defaultFilters\\\"\\n                            :active-filter-number=\\\"activeFilterNumber\\\"\\n                            @criteria-changed=\\\"updateCriteria\\\">\\n                    </sw-sidebar-filter-panel>\\n                {% endblock %}\\n            </sw-sidebar>\\n        </template>\\n    </sw-page>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./klaviyo-integration-settings.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"33ad7cca\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./klaviyo-integration-settings-customer.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"40674b4c\", content, true, {});","var map = {\n\t\"./icons-klaviyo-integration.svg\": \"lCbG\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RDzx\";","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nexport default function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nimport listToStyles from './listToStyles'\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nexport default function addStylesClient (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n","module.exports = \"{% block klaviyo_integration_settings_icon %}\\n    <sw-icon name=\\\"klaviyo-integration\\\" size=\\\"30\\\" multicolor></sw-icon>\\n{% endblock %}\";","module.exports = \"{% block sw_product_deliverability_form_max_purchase_field %}\\n    {% parent() %}\\n    {% block od_klaviyo_back_in_stock_email_notification %}\\n        <sw-field v-model=\\\"product.customFields.klaviyo_back_in_stock_disabled\\\"\\n                  type=\\\"switch\\\"\\n                  label=\\\"Disable back in stock email notifications\\\"\\n        />\\n    {% endblock %}\\n{% endblock %}\";","module.exports = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" ?>\\n<rss version=\\\"2.0\\\" xmlns:g=\\\"http://base.google.com/ns/1.0\\\" xmlns:atom=\\\"http://www.w3.org/2005/Atom\\\">\\n    <Products>\\n\";","module.exports = \"<Product>\\n    <id>{{ product.productNumber }}</id>\\n    <title>{{ product.translated.name|escape }}</title>\\n    <link>{{ seoUrl('frontend.detail.page', {'productId': product.id}) }}</link>\\n    <description>{{ product.translated.description|escape }}</description>\\n    <price>{% set price = product.calculatedPrice %} {% if product.calculatedPrices.count %} {% set price = product.calculatedPrices.last %} {% endif %} {{ price.unitPrice }}</price>\\n    {%- if product.cover is not null and product.cover.media -%}\\n    <image_link>{{ product.cover.media.url }}</image_link>\\n    {%- else -%}\\n    <image_link>n/a</image_link>\\n    {%- endif -%}\\n    {%- if product.categories|length > 0 -%}\\n        {% set categoryNames = [] %}\\n\\n        {% for category in product.categories %}\\n            {% set categoryNames = categoryNames|merge([category.translated.name]) %}\\n        {% endfor %}\\n        <categories>{{ categoryNames|join(',')|raw|escape }}</categories>\\n    {%- else -%}\\n        <categories>n/a</categories>\\n    {%- endif -%}\\n    <inventory_quantity>{{ product.availableStock }}</inventory_quantity>\\n    <inventory_policy>1</inventory_policy>\\n</Product>\\n\";","module.exports = \"{% block sw_promotion_v2_list_smart_bar_actions_add %}\\n    {% parent %}\\n    <sw-button\\n            :link=\\\"getExportUrl()\\\"\\n            variant=\\\"primary\\\"\\n    >\\n        {{ $tc('klaviyo_integration_plugin.promotion.exportInKlaviyoFormatButtonLabel') }}\\n    </sw-button>\\n{% endblock %}\\n\\n{% parent %}\";","module.exports = \"{% block klaviyo_integration_settings %}\\n    <sw-page class=\\\"klaviyo-integration-settings\\\">\\n        {% block klaviyo_integration_settings_header %}\\n            <template #smart-bar-header>\\n                <h2>\\n                    {{ $tc('sw-settings.index.title') }}\\n                    <sw-icon name=\\\"small-arrow-medium-right\\\" small></sw-icon>\\n                    {{ $tc('klaviyo-integration-settings.title') }}\\n                </h2>\\n            </template>\\n        {% endblock %}\\n        {% block klaviyo_integration_settings_actions %}\\n            <template #smart-bar-actions>\\n\\n                {% block klaviyo_integration_settings_actions_historical_events_synchronization_control %}\\n                    <klaviyo-integration-settings-synchronization-control></klaviyo-integration-settings-synchronization-control>\\n                {% endblock %}\\n\\n                {% block klaviyo_integration_settings_actions_save %}\\n                    <sw-button-process v-model=\\\"isSaveSuccessful\\\"\\n                                       class=\\\"klaviyo-integration-settings-save\\\"\\n                                       variant=\\\"primary\\\"\\n                                       :isLoading=\\\"isLoading\\\"\\n                                       :disabled=\\\"isLoading || hasError\\\"\\n                                       @click=\\\"onSave\\\">\\n                        {{ $tc('global.default.save') }}\\n                    </sw-button-process>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n\\n        {% block klaviyo_integration_settings_content %}\\n            <template #content>\\n\\n\\n                {% block klaviyo_integration_settings_content_sales_channel_config %}\\n                    <sw-sales-channel-config v-model=\\\"config\\\"\\n                                             ref=\\\"configComponent\\\"\\n                                             domain=\\\"KlaviyoIntegrationPlugin.config\\\">\\n                        {% block klaviyo_integration_settings_content_sales_channel_config_channel %}\\n                            <template #select=\\\"{ onInput, selectedSalesChannelId }\\\">\\n                                {% block klaviyo_integration_settings_content_sales_channel_config_channel_card %}\\n                                    <sw-card class=\\\"sw-card--grid\\\"\\n                                             :title=\\\"$tc('global.entities.sales_channel', 2)\\\">\\n                                        <div class=\\\"card-container klaviyo-integration-settings-sales-channel\\\">\\n                                            {% block klaviyo_integration_settings_content_sales_channel_config_channel_card_select %}\\n                                                <sw-single-select v-model=\\\"selectedSalesChannelId\\\"\\n                                                                  labelProperty=\\\"translated.name\\\"\\n                                                                  valueProperty=\\\"id\\\"\\n                                                                  :isLoading=\\\"isLoading\\\"\\n                                                                  :options=\\\"salesChannels\\\"\\n                                                                  @change=\\\"onInput\\\">\\n                                                </sw-single-select>\\n                                            {% endblock %}\\n                                        </div>\\n                                    </sw-card>\\n                                {% endblock %}\\n                            </template>\\n                        {% endblock %}\\n\\n                        {% block klaviyo_integration_settings_content_sales_channel_configs %}\\n                            <template #content=\\\"{ actualConfigData, allConfigs, selectedSalesChannelId }\\\">\\n                                <div v-if=\\\"actualConfigData\\\">\\n\\n                                    {% block klaviyo_integration_settings_content_sales_channel_general %}\\n                                        <klaviyo-integration-settings-general\\n                                                :actualConfigData=\\\"actualConfigData\\\"\\n                                                :allConfigs=\\\"allConfigs\\\"\\n                                                :selectedSalesChannelId=\\\"selectedSalesChannelId\\\"\\n                                                :privateKeyErrorState=\\\"privateKeyErrorState\\\"\\n                                                :publicKeyErrorState=\\\"publicKeyErrorState\\\"\\n                                                :listNameErrorState=\\\"listNameErrorState\\\">\\n                                        </klaviyo-integration-settings-general>\\n                                    {% endblock %}\\n\\n                                    {% block klaviyo_integration_settings_content_sales_channel_customer %}\\n                                        <klaviyo-integration-settings-customer :allConfigs=\\\"allConfigs\\\"\\n                                                                               :mappingErrorStates=\\\"mappingErrorStates\\\">\\n                                        </klaviyo-integration-settings-customer>\\n                                    {% endblock %}\\n\\n                                </div>\\n                            </template>\\n                        {% endblock %}\\n\\n                    </sw-sales-channel-config>\\n                {% endblock %}\\n\\n                {% block klaviyo_integration_settings_content_loading %}\\n                    <sw-loader v-if=\\\"isLoading\\\"></sw-loader>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n\\n    </sw-page>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./klaviyo-integration-settings-general.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"47a9cf8c\", content, true, {});","module.exports = \"<svg width=\\\"48\\\" height=\\\"48\\\" viewBox=\\\"0 0 48 48\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M1.28249 22.8186L22.5482 8.73089C23.0015 8.46725 23.5165 8.32837 24.0408 8.32837C24.5652 8.32837 25.0802 8.46725 25.5335 8.73089L46.7992 22.8186C47.0857 22.9576 47.3274 23.1744 47.4964 23.4443C47.6655 23.7142 47.7551 24.0263 47.7551 24.3447C47.7551 24.6632 47.6655 24.9753 47.4964 25.2452C47.3274 25.5151 47.0857 25.7319 46.7992 25.8709L43.9481 27.7493C41.8213 24.3893 38.8794 21.6218 35.3959 19.7041C31.9124 17.7864 28.0005 16.7807 24.024 16.7807C20.0476 16.7807 16.1357 17.7864 12.6522 19.7041C9.16869 21.6218 6.22676 24.3893 4.09999 27.7493L1.24889 25.8709C0.967002 25.7261 0.731008 25.5056 0.567361 25.2342C0.403714 24.9629 0.318881 24.6513 0.322369 24.3344C0.325857 24.0175 0.417529 23.7078 0.587111 23.4401C0.756693 23.1724 0.997482 22.9572 1.28249 22.8186V22.8186ZM24.0241 22.6509C21.0211 22.6577 18.0686 23.4239 15.4413 24.8783C12.814 26.3327 10.5972 28.428 8.99719 30.9693L13.8943 34.2229C14.9432 32.4831 16.424 31.0438 18.1929 30.0448C19.9618 29.0457 21.9589 28.5207 23.9905 28.5207C26.0221 28.5207 28.0191 29.0457 29.7881 30.0448C31.557 31.0438 33.0378 32.4831 34.0867 34.2229L38.9839 30.9693C37.4071 28.4217 35.2047 26.3199 32.5862 24.8639C29.9677 23.4079 27.0202 22.646 24.0241 22.6509V22.6509ZM24.0241 34.4242C22.9657 34.4312 21.9278 34.717 21.0151 35.2529C20.1023 35.7888 19.3469 36.5557 18.825 37.4765L22.1122 39.6232C22.6469 40.0754 23.3238 40.3248 24.0241 40.3276C24.7254 40.3307 25.4043 40.0805 25.936 39.6232L29.2231 37.4765C28.7055 36.552 27.9511 35.7819 27.0374 35.2455C26.1237 34.7091 25.0836 34.4256 24.0241 34.4242V34.4242Z\\\" fill=\\\"url(#paint0_linear_101_11)\\\"></path><defs><linearGradient id=\\\"paint0_linear_101_11\\\" x1=\\\"24.0387\\\" y1=\\\"40.3276\\\" x2=\\\"24.0387\\\" y2=\\\"8.32834\\\" gradientUnits=\\\"userSpaceOnUse\\\"><stop stop-color=\\\"#EFC119\\\"></stop><stop offset=\\\"0.3314\\\" stop-color=\\\"#92C84E\\\"></stop><stop offset=\\\"0.4859\\\" stop-color=\\\"#71BF5B\\\"></stop><stop offset=\\\"0.7506\\\" stop-color=\\\"#15B158\\\"></stop><stop offset=\\\"0.903\\\" stop-color=\\\"#23AC69\\\"></stop><stop offset=\\\"1\\\" stop-color=\\\"#23AC69\\\"></stop></linearGradient></defs></svg>\"","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ref--14-2!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ref--14-3!./klaviyo-job-listing.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../vendor/shopware/administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"1d2b40b3\", content, true, {});","module.exports = \"{% block klaviyo_integration_settings_customer %}\\n    <sw-card :title=\\\"$tc('klaviyo-integration-settings.customer.title')\\\">\\n\\n        {% block klaviyo_integration_settings_customer_custom_field_mapping %}\\n\\n            <template v-if=\\\"!isLoading\\\" v-for=\\\"mappedField, mappedKey in customFieldMapping\\\">\\n                <sw-container columns=\\\"2fr 5fr 5fr\\\" gap=\\\"16px\\\">\\n\\n                    <sw-switch-field\\n                            label=\\\"Active\\\"\\n                            :disabled=\\\"isLoading\\\"\\n                            size=\\\"small\\\"\\n                            v-model=\\\"mappedField.active\\\">\\n                    </sw-switch-field>\\n\\n                    <sw-text-field v-model=\\\"mappedField.customLabel\\\"\\n                                   :disabled=\\\"!mappedField.active\\\"\\n                                   :placeholder=\\\"$tc('klaviyo-integration-settings.customer.fieldMapping.item.fieldNamePlaceholder')\\\"\\n                                   :error=\\\"mappingErrorStates[mappedKey]?.code !== undefined ? mappingErrorStates[mappedKey] : null\\\"\\n                                   :label=\\\"$tc('klaviyo-integration-settings.customer.fieldMapping.item.fieldName')\\\">\\n                    </sw-text-field>\\n                    <div class=\\\"custom-field-hint-container\\\">\\n                        <span>{{ getCustomFieldHint(mappedKey) }}</span>\\n                    </div>\\n                </sw-container>\\n            </template>\\n\\n            <div v-if=\\\"!isLoading && noCustomFieldsError\\\" class=\\\"klaviyo-fieldmapping-notice-block\\\">\\n                {{ $tc(noCustomFieldsError) }}\\n            </div>\\n\\n        {% endblock %}\\n        <sw-loader v-if=\\\"isLoading\\\"/>\\n\\n    </sw-card>\\n{% endblock %}\\n\";","module.exports = \"</Products>\\n</rss>\\n\";","module.exports = \"{% block klaviyo_integration_settings_general %}\\n    <div>\\n        <sw-card title=\\\"Interaction settings\\\" class=\\\"klaviyo-interaction-settings\\\">\\n            <sw-inherit-wrapper v-model=\\\"actualConfigData['KlaviyoIntegrationPlugin.config.isInitializeKlaviyoAfterInteraction']\\\"\\n                                :inheritedValue=\\\"selectedSalesChannelId === null ? null : allConfigs['null']['KlaviyoIntegrationPlugin.config.isInitializeKlaviyoAfterInteraction']\\\"\\n                                :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                <template #content=\\\"props\\\">\\n                    <sw-switch-field name=\\\"KlaviyoIntegrationPlugin.config.isInitializeKlaviyoAfterInteraction\\\"\\n                                     :mapInheritance=\\\"props\\\"\\n                                     label=\\\"Initialize Klaviyo After First Interaction With Page.\\\"\\n                                     :disabled=\\\"props.isInherited\\\"\\n                                     :value=\\\"props.currentValue\\\"\\n                                     :helpText=\\\"$tc('klaviyo-integration-settings.general.initialization.helpText')\\\"\\n                                     @change=\\\"props.updateCurrentValue\\\">\\n                    </sw-switch-field>\\n                </template>\\n            </sw-inherit-wrapper>\\n        </sw-card>\\n        <sw-card :title=\\\"$tc('klaviyo-integration-settings.general.title')\\\">\\n            {% block klaviyo_integration_settings_general_credentials_alert %}\\n                <sw-alert v-if=\\\"selectedSalesChannelId === null\\\" variant=\\\"warning\\\">\\n                    {{ $t('klaviyo-integration-settings.general.credentialsAlert') }}\\n                </sw-alert>\\n            {% endblock %}\\n\\n            {% block klaviyo_integration_settings_general_enabled %}\\n                <sw-switch-field\\n                    v-if=\\\"selectedSalesChannelId !== null\\\"\\n                    class=\\\"no-top-margin\\\"\\n                    v-model=\\\"actualConfigData['KlaviyoIntegrationPlugin.config.enabled']\\\"\\n                    name=\\\"KlaviyoIntegrationPlugin.config.enabled\\\"\\n                    :label=\\\"$tc('klaviyo-integration-settings.configs.enabled.label')\\\"\\n                    :helpText=\\\"$tc('klaviyo-integration-settings.configs.enabled.helpText')\\\">\\n                </sw-switch-field>\\n            {% endblock %}\\n\\n            {% block klaviyo_integration_settings_general_private_api_key %}\\n                <sw-field\\n                    v-model=\\\"actualConfigData['KlaviyoIntegrationPlugin.config.privateApiKey']\\\"\\n                    name=\\\"KlaviyoIntegrationPlugin.config.privateApiKey\\\"\\n                    type=\\\"text\\\"\\n                    :label=\\\"$tc('klaviyo-integration-settings.configs.privateApiKey.label')\\\"\\n                    :helpText=\\\"$tc('klaviyo-integration-settings.configs.privateApiKey.helpText')\\\"\\n                    :disabled=\\\"selectedSalesChannelId === null\\\"\\n                    :error=\\\"privateKeyErrorState\\\"\\n                    required>\\n                </sw-field>\\n            {% endblock %}\\n\\n            {% block klaviyo_integration_settings_general_public_api_key %}\\n                <sw-field\\n                    v-model=\\\"actualConfigData['KlaviyoIntegrationPlugin.config.publicApiKey']\\\"\\n                    name=\\\"KlaviyoIntegrationPlugin.config.privateApiKey\\\"\\n                    type=\\\"text\\\"\\n                    :label=\\\"$tc('klaviyo-integration-settings.configs.publicApiKey.label')\\\"\\n                    :helpText=\\\"$tc('klaviyo-integration-settings.configs.publicApiKey.helpText')\\\"\\n                    :disabled=\\\"selectedSalesChannelId === null\\\"\\n                    :error=\\\"publicKeyErrorState\\\"\\n                    required>\\n                </sw-field>\\n            {% endblock %}\\n\\n            {% block klaviyo_integration_settings_general_klaviyo_list_for_subscribers_sync %}\\n                <sw-field\\n                    v-model=\\\"actualConfigData['KlaviyoIntegrationPlugin.config.klaviyoListForSubscribersSync']\\\"\\n                    name=\\\"KlaviyoIntegrationPlugin.config.privateApiKey\\\"\\n                    type=\\\"text\\\"\\n                    :label=\\\"$tc('klaviyo-integration-settings.configs.klaviyoListForSubscribersSync.label')\\\"\\n                    :helpText=\\\"$tc('klaviyo-integration-settings.configs.klaviyoListForSubscribersSync.helpText')\\\"\\n                    :disabled=\\\"selectedSalesChannelId === null\\\"\\n                    :error=\\\"listNameErrorState\\\"\\n                    required>\\n                </sw-field>\\n            {% endblock %}\\n\\n            {% block klaviyo_integration_settings_general_track_deleted_account_orders %}\\n                <sw-inherit-wrapper v-model=\\\"actualConfigData['KlaviyoIntegrationPlugin.config.trackDeletedAccountOrders']\\\"\\n                                    :inheritedValue=\\\"selectedSalesChannelId === null ? null : allConfigs['null']['KlaviyoIntegrationPlugin.config.trackDeletedAccountOrders']\\\"\\n                                    :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                    <template #content=\\\"props\\\">\\n                        <sw-switch-field name=\\\"KlaviyoIntegrationPlugin.config.trackDeletedAccountOrders\\\"\\n                                         :mapInheritance=\\\"props\\\"\\n                                         :label=\\\"$tc('klaviyo-integration-settings.configs.trackDeletedAccountOrders.label')\\\"\\n                                         :helpText=\\\"$tc('klaviyo-integration-settings.configs.trackDeletedAccountOrders.helpText')\\\"\\n                                         :disabled=\\\"props.isInherited\\\"\\n                                         :value=\\\"props.currentValue\\\"\\n                                         @change=\\\"props.updateCurrentValue\\\">\\n                        </sw-switch-field>\\n                    </template>\\n                </sw-inherit-wrapper>\\n            {% endblock %}\\n\\n            {% block klaviyo_integration_settings_general_track_viewed_product %}\\n                <sw-inherit-wrapper v-model=\\\"actualConfigData['KlaviyoIntegrationPlugin.config.trackViewedProduct']\\\"\\n                                    :inheritedValue=\\\"selectedSalesChannelId === null ? null : allConfigs['null']['KlaviyoIntegrationPlugin.config.trackViewedProduct']\\\"\\n                                    :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                    <template #content=\\\"props\\\">\\n                        <sw-switch-field name=\\\"KlaviyoIntegrationPlugin.config.trackViewedProduct\\\"\\n                                         :mapInheritance=\\\"props\\\"\\n                                         :label=\\\"$tc('klaviyo-integration-settings.configs.trackViewedProduct.label')\\\"\\n                                         :helpText=\\\"$tc('klaviyo-integration-settings.configs.trackViewedProduct.helpText')\\\"\\n                                         :disabled=\\\"props.isInherited\\\"\\n                                         :value=\\\"props.currentValue\\\"\\n                                         @change=\\\"props.updateCurrentValue\\\">\\n                        </sw-switch-field>\\n                    </template>\\n                </sw-inherit-wrapper>\\n            {% endblock %}\\n\\n            {% block klaviyo_integration_settings_general_track_recently_viewed_items %}\\n                <sw-inherit-wrapper\\n                        v-model=\\\"actualConfigData['KlaviyoIntegrationPlugin.config.trackRecentlyViewedItems']\\\"\\n                        :inheritedValue=\\\"selectedSalesChannelId === null ? null : allConfigs['null']['KlaviyoIntegrationPlugin.config.trackRecentlyViewedItems']\\\"\\n                        :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                    <template #content=\\\"props\\\">\\n                        <sw-switch-field name=\\\"KlaviyoIntegrationPlugin.config.trackRecentlyViewedItems\\\"\\n                                         :mapInheritance=\\\"props\\\"\\n                                         :label=\\\"$tc('klaviyo-integration-settings.configs.trackRecentlyViewedItems.label')\\\"\\n                                         :helpText=\\\"$tc('klaviyo-integration-settings.configs.trackRecentlyViewedItems.helpText')\\\"\\n                                         :disabled=\\\"props.isInherited\\\"\\n                                         :value=\\\"props.currentValue\\\"\\n                                         @change=\\\"props.updateCurrentValue\\\">\\n                        </sw-switch-field>\\n                    </template>\\n                </sw-inherit-wrapper>\\n            {% endblock %}\\n\\n            {% block klaviyo_integration_settings_general_track_added_to_cart %}\\n                <sw-inherit-wrapper v-model=\\\"actualConfigData['KlaviyoIntegrationPlugin.config.trackAddedToCart']\\\"\\n                                    :inheritedValue=\\\"selectedSalesChannelId === null ? null : allConfigs['null']['KlaviyoIntegrationPlugin.config.trackAddedToCart']\\\"\\n                                    :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                    <template #content=\\\"props\\\">\\n                        <sw-switch-field name=\\\"KlaviyoIntegrationPlugin.config.trackAddedToCart\\\"\\n                                         :mapInheritance=\\\"props\\\"\\n                                         :label=\\\"$tc('klaviyo-integration-settings.configs.trackAddedToCart.label')\\\"\\n                                         :helpText=\\\"$tc('klaviyo-integration-settings.configs.trackAddedToCart.helpText')\\\"\\n                                         :disabled=\\\"props.isInherited\\\"\\n                                         :value=\\\"props.currentValue\\\"\\n                                         @change=\\\"props.updateCurrentValue\\\">\\n                        </sw-switch-field>\\n                    </template>\\n                </sw-inherit-wrapper>\\n            {% endblock %}\\n\\n            {% block klaviyo_integration_settings_general_track_started_checkout %}\\n                <sw-inherit-wrapper v-model=\\\"actualConfigData['KlaviyoIntegrationPlugin.config.trackStartedCheckout']\\\"\\n                                    :inheritedValue=\\\"selectedSalesChannelId === null ? null : allConfigs['null']['KlaviyoIntegrationPlugin.config.trackStartedCheckout']\\\"\\n                                    :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                    <template #content=\\\"props\\\">\\n                        <sw-switch-field name=\\\"KlaviyoIntegrationPlugin.config.trackStartedCheckout\\\"\\n                                         :mapInheritance=\\\"props\\\"\\n                                         :label=\\\"$tc('klaviyo-integration-settings.configs.trackStartedCheckout.label')\\\"\\n                                         :helpText=\\\"$tc('klaviyo-integration-settings.configs.trackStartedCheckout.helpText')\\\"\\n                                         :disabled=\\\"props.isInherited\\\"\\n                                         :value=\\\"props.currentValue\\\"\\n                                         @change=\\\"props.updateCurrentValue\\\">\\n                        </sw-switch-field>\\n                    </template>\\n                </sw-inherit-wrapper>\\n            {% endblock %}\\n\\n            {% block klaviyo_integration_settings_general_track_placed_order %}\\n                <sw-inherit-wrapper v-model=\\\"actualConfigData['KlaviyoIntegrationPlugin.config.trackPlacedOrder']\\\"\\n                                    :inheritedValue=\\\"selectedSalesChannelId === null ? null : allConfigs['null']['KlaviyoIntegrationPlugin.config.trackPlacedOrder']\\\"\\n                                    :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                    <template #content=\\\"props\\\">\\n                        <sw-switch-field name=\\\"KlaviyoIntegrationPlugin.config.trackPlacedOrder\\\"\\n                                         :mapInheritance=\\\"props\\\"\\n                                         :label=\\\"$tc('klaviyo-integration-settings.configs.trackPlacedOrder.label')\\\"\\n                                         :helpText=\\\"$tc('klaviyo-integration-settings.configs.trackPlacedOrder.helpText')\\\"\\n                                         :disabled=\\\"props.isInherited\\\"\\n                                         :value=\\\"props.currentValue\\\"\\n                                         @change=\\\"props.updateCurrentValue\\\">\\n                        </sw-switch-field>\\n                    </template>\\n                </sw-inherit-wrapper>\\n            {% endblock %}\\n\\n            {% block klaviyo_integration_settings_general_track_ordered_product %}\\n                <sw-inherit-wrapper v-model=\\\"actualConfigData['KlaviyoIntegrationPlugin.config.trackOrderedProduct']\\\"\\n                                    :inheritedValue=\\\"selectedSalesChannelId === null ? null : allConfigs['null']['KlaviyoIntegrationPlugin.config.trackOrderedProduct']\\\"\\n                                    :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                    <template #content=\\\"props\\\">\\n                        <sw-switch-field name=\\\"KlaviyoIntegrationPlugin.config.trackOrderedProduct\\\"\\n                                         :mapInheritance=\\\"props\\\"\\n                                         :label=\\\"$tc('klaviyo-integration-settings.configs.trackOrderedProduct.label')\\\"\\n                                         :helpText=\\\"$tc('klaviyo-integration-settings.configs.trackOrderedProduct.helpText')\\\"\\n                                         :disabled=\\\"props.isInherited\\\"\\n                                         :value=\\\"props.currentValue\\\"\\n                                         @change=\\\"props.updateCurrentValue\\\">\\n                        </sw-switch-field>\\n                    </template>\\n                </sw-inherit-wrapper>\\n            {% endblock %}\\n\\n            {% block klaviyo_integration_settings_general_track_fulfilled_order %}\\n                <sw-inherit-wrapper v-model=\\\"actualConfigData['KlaviyoIntegrationPlugin.config.trackFulfilledOrder']\\\"\\n                                    :inheritedValue=\\\"selectedSalesChannelId === null ? null : allConfigs['null']['KlaviyoIntegrationPlugin.config.trackFulfilledOrder']\\\"\\n                                    :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                    <template #content=\\\"props\\\">\\n                        <sw-switch-field name=\\\"KlaviyoIntegrationPlugin.config.trackFulfilledOrder\\\"\\n                                         :mapInheritance=\\\"props\\\"\\n                                         :label=\\\"$tc('klaviyo-integration-settings.configs.trackFulfilledOrder.label')\\\"\\n                                         :helpText=\\\"$tc('klaviyo-integration-settings.configs.trackFulfilledOrder.helpText')\\\"\\n                                         :disabled=\\\"props.isInherited\\\"\\n                                         :value=\\\"props.currentValue\\\"\\n                                         @change=\\\"props.updateCurrentValue\\\">\\n                        </sw-switch-field>\\n                    </template>\\n                </sw-inherit-wrapper>\\n            {% endblock %}\\n\\n            {% block klaviyo_integration_settings_general_track_cancelled_order %}\\n                <sw-inherit-wrapper v-model=\\\"actualConfigData['KlaviyoIntegrationPlugin.config.trackCancelledOrder']\\\"\\n                                    :inheritedValue=\\\"selectedSalesChannelId === null ? null : allConfigs['null']['KlaviyoIntegrationPlugin.config.trackCancelledOrder']\\\"\\n                                    :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                    <template #content=\\\"props\\\">\\n                        <sw-switch-field name=\\\"KlaviyoIntegrationPlugin.config.trackCancelledOrder\\\"\\n                                         :mapInheritance=\\\"props\\\"\\n                                         :label=\\\"$tc('klaviyo-integration-settings.configs.trackCancelledOrder.label')\\\"\\n                                         :helpText=\\\"$tc('klaviyo-integration-settings.configs.trackCancelledOrder.helpText')\\\"\\n                                         :disabled=\\\"props.isInherited\\\"\\n                                         :value=\\\"props.currentValue\\\"\\n                                         @change=\\\"props.updateCurrentValue\\\">\\n                        </sw-switch-field>\\n                    </template>\\n                </sw-inherit-wrapper>\\n            {% endblock %}\\n\\n            {% block klaviyo_integration_settings_general_track_refunded_order %}\\n                <sw-inherit-wrapper v-model=\\\"actualConfigData['KlaviyoIntegrationPlugin.config.trackRefundedOrder']\\\"\\n                                    :inheritedValue=\\\"selectedSalesChannelId === null ? null : allConfigs['null']['KlaviyoIntegrationPlugin.config.trackRefundedOrder']\\\"\\n                                    :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                    <template #content=\\\"props\\\">\\n                        <sw-switch-field name=\\\"KlaviyoIntegrationPlugin.config.trackRefundedOrder\\\"\\n                                         :mapInheritance=\\\"props\\\"\\n                                         :label=\\\"$tc('klaviyo-integration-settings.configs.trackRefundedOrder.label')\\\"\\n                                         :helpText=\\\"$tc('klaviyo-integration-settings.configs.trackRefundedOrder.helpText')\\\"\\n                                         :disabled=\\\"props.isInherited\\\"\\n                                         :value=\\\"props.currentValue\\\"\\n                                         @change=\\\"props.updateCurrentValue\\\">\\n                        </sw-switch-field>\\n                    </template>\\n                </sw-inherit-wrapper>\\n            {% endblock %}\\n\\n            {% block klaviyo_integration_settings_general_track_back_in_stock %}\\n                <sw-inherit-wrapper\\n                        v-model=\\\"actualConfigData['KlaviyoIntegrationPlugin.config.trackSubscribedToBackInStock']\\\"\\n                        :inheritedValue=\\\"selectedSalesChannelId === null ? null : allConfigs['null']['KlaviyoIntegrationPlugin.config.trackSubscribedToBackInStock']\\\"\\n                        :customInheritationCheckFunction=\\\"checkBoolFieldInheritance\\\">\\n                    <template #content=\\\"props\\\">\\n                        <sw-switch-field name=\\\"KlaviyoIntegrationPlugin.config.trackSubscribedToBackInStock\\\"\\n                                         :mapInheritance=\\\"props\\\"\\n                                         :label=\\\"$tc('klaviyo-integration-settings.configs.trackSubscribedToBackInStock.label')\\\"\\n                                         :helpText=\\\"$tc('klaviyo-integration-settings.configs.trackSubscribedToBackInStock.helpText')\\\"\\n                                         :disabled=\\\"props.isInherited\\\"\\n                                         :value=\\\"props.currentValue\\\"\\n                                         @change=\\\"props.updateCurrentValue\\\">\\n                        </sw-switch-field>\\n                    </template>\\n                </sw-inherit-wrapper>\\n            {% endblock %}\\n        </sw-card>\\n        <sw-card\\n            :title=\\\"$tc('klaviyo-integration-settings.pop-up.title')\\\"\\n            v-if=\\\"actualConfigData['KlaviyoIntegrationPlugin.config.trackSubscribedToBackInStock']\\\">\\n            <fieldset>\\n                <legend>{{ $tc('klaviyo-integration-settings.pop-up.open-button-fieldset-label') }}</legend>\\n                <sw-container columns=\\\"5fr 5fr\\\" gap=\\\"16px\\\">\\n                    {% block klaviyo_integration_settings_pop_up_show_button %}\\n                        <sw-inherit-wrapper\\n                                v-model=\\\"actualConfigData['KlaviyoIntegrationPlugin.config.popUpOpenBtnColor']\\\"\\n                                :inheritedValue=\\\"selectedSalesChannelId === null ? null : allConfigs['null']['KlaviyoIntegrationPlugin.config.popUpOpenBtnColor']\\\"\\n                                :customInheritationCheckFunction=\\\"checkTextFieldInheritance\\\">\\n                            <template #content=\\\"props\\\">\\n                                <sw-field\\n                                        :label=\\\"$tc('klaviyo-integration-settings.pop-up.colorLabel')\\\"\\n                                        type=\\\"colorpicker\\\"\\n                                        :map-inheritance=\\\"props\\\"\\n                                        :value=\\\"props.currentValue\\\"\\n                                        :disabled=\\\"props.isInherited\\\"\\n                                        name=\\\"KlaviyoIntegrationPlugin.config.popUpOpenBtnColor\\\"\\n                                        @input=\\\"props.updateCurrentValue\\\"></sw-field>\\n                            </template>\\n                        </sw-inherit-wrapper>\\n                    {% endblock %}\\n\\n                    {% block klaviyo_integration_settings_pop_up_show_button_bg %}\\n                        <sw-inherit-wrapper\\n                                v-model=\\\"actualConfigData['KlaviyoIntegrationPlugin.config.popUpOpenBtnBgColor']\\\"\\n                                :inheritedValue=\\\"selectedSalesChannelId === null ? null : allConfigs['null']['KlaviyoIntegrationPlugin.config.popUpOpenBtnBgColor']\\\"\\n                        >\\n                            <template #content=\\\"props\\\">\\n                                <sw-field\\n                                        :label=\\\"$tc('klaviyo-integration-settings.pop-up.backgroundLabel')\\\"\\n                                        type=\\\"colorpicker\\\"\\n                                        :map-inheritance=\\\"props\\\"\\n                                        :value=\\\"props.currentValue\\\"\\n                                        :disabled=\\\"props.isInherited\\\"\\n                                        name=\\\"KlaviyoIntegrationPlugin.config.popUpOpenBtnBgColor\\\"\\n                                        @input=\\\"props.updateCurrentValue\\\"></sw-field>\\n                            </template>\\n                        </sw-inherit-wrapper>\\n                    {% endblock %}\\n                </sw-container>\\n            </fieldset>\\n\\n            <fieldset>\\n                <legend>{{ $tc('klaviyo-integration-settings.pop-up.close-button-fieldset-label') }}</legend>\\n                <sw-container columns=\\\"5fr 5fr\\\" gap=\\\"16px\\\">\\n                    {% block klaviyo_integration_settings_pop_up_hide_button %}\\n                        <sw-inherit-wrapper\\n                                v-model=\\\"actualConfigData['KlaviyoIntegrationPlugin.config.popUpCloseBtnColor']\\\"\\n                                :inheritedValue=\\\"selectedSalesChannelId === null ? null : allConfigs['null']['KlaviyoIntegrationPlugin.config.popUpCloseBtnColor']\\\"\\n                                :customInheritationCheckFunction=\\\"checkTextFieldInheritance\\\">\\n                            <template #content=\\\"props\\\">\\n                                <sw-field\\n                                        :label=\\\"$tc('klaviyo-integration-settings.pop-up.colorLabel')\\\"\\n                                        type=\\\"colorpicker\\\"\\n                                        :map-inheritance=\\\"props\\\"\\n                                        :value=\\\"props.currentValue\\\"\\n                                        :disabled=\\\"props.isInherited\\\"\\n                                        name=\\\"KlaviyoIntegrationPlugin.config.popUpCloseBtnColor\\\"\\n                                        @input=\\\"props.updateCurrentValue\\\"></sw-field>\\n                            </template>\\n                        </sw-inherit-wrapper>\\n                    {% endblock %}\\n\\n                    {% block klaviyo_integration_settings_pop_up_hide_button_bg %}\\n                        <sw-inherit-wrapper\\n                                v-model=\\\"actualConfigData['KlaviyoIntegrationPlugin.config.popUpCloseBtnBgColor']\\\"\\n                                :inheritedValue=\\\"selectedSalesChannelId === null ? null : allConfigs['null']['KlaviyoIntegrationPlugin.config.popUpCloseBtnBgColor']\\\"\\n                        >\\n                            <template #content=\\\"props\\\">\\n                                <sw-field\\n                                        :label=\\\"$tc('klaviyo-integration-settings.pop-up.backgroundLabel')\\\"\\n                                        type=\\\"colorpicker\\\"\\n                                        :map-inheritance=\\\"props\\\"\\n                                        :value=\\\"props.currentValue\\\"\\n                                        :disabled=\\\"props.isInherited\\\"\\n                                        name=\\\"KlaviyoIntegrationPlugin.config.popUpCloseBtnBgColor\\\"\\n                                        @input=\\\"props.updateCurrentValue\\\"></sw-field>\\n                            </template>\\n                        </sw-inherit-wrapper>\\n                    {% endblock %}\\n                </sw-container>\\n            </fieldset>\\n\\n            <fieldset>\\n                <legend>{{ $tc('klaviyo-integration-settings.pop-up.subscribe-button-fieldset-label') }}</legend>\\n                <sw-container columns=\\\"5fr 5fr\\\" gap=\\\"16px\\\">\\n                    {% block klaviyo_integration_settings_pop_up_subscribe_button %}\\n                        <sw-inherit-wrapper\\n                                v-model=\\\"actualConfigData['KlaviyoIntegrationPlugin.config.subscribeBtnColor']\\\"\\n                                :inheritedValue=\\\"selectedSalesChannelId === null ? null : allConfigs['null']['KlaviyoIntegrationPlugin.config.subscribeBtnColor']\\\"\\n                                :customInheritationCheckFunction=\\\"checkTextFieldInheritance\\\">\\n                            <template #content=\\\"props\\\">\\n                                <sw-field\\n                                        :label=\\\"$tc('klaviyo-integration-settings.pop-up.colorLabel')\\\"\\n                                        type=\\\"colorpicker\\\"\\n                                        :map-inheritance=\\\"props\\\"\\n                                        :value=\\\"props.currentValue\\\"\\n                                        :disabled=\\\"props.isInherited\\\"\\n                                        name=\\\"KlaviyoIntegrationPlugin.config.subscribeBtnColor\\\"\\n                                        @input=\\\"props.updateCurrentValue\\\"></sw-field>\\n                            </template>\\n                        </sw-inherit-wrapper>\\n                    {% endblock %}\\n\\n                    {% block klaviyo_integration_settings_pop_up_subscribe_button_bg %}\\n                        <sw-inherit-wrapper\\n                                v-model=\\\"actualConfigData['KlaviyoIntegrationPlugin.config.subscribeBtnBgColor']\\\"\\n                                :inheritedValue=\\\"selectedSalesChannelId === null ? null : allConfigs['null']['KlaviyoIntegrationPlugin.config.subscribeBtnBgColor']\\\"\\n                        >\\n                            <template #content=\\\"props\\\">\\n                                <sw-field\\n                                        :label=\\\"$tc('klaviyo-integration-settings.pop-up.backgroundLabel')\\\"\\n                                        type=\\\"colorpicker\\\"\\n                                        :map-inheritance=\\\"props\\\"\\n                                        :value=\\\"props.currentValue\\\"\\n                                        :disabled=\\\"props.isInherited\\\"\\n                                        name=\\\"KlaviyoIntegrationPlugin.config.subscribeBtnBgColor\\\"\\n                                        @input=\\\"props.updateCurrentValue\\\"></sw-field>\\n                            </template>\\n                        </sw-inherit-wrapper>\\n                    {% endblock %}\\n                </sw-container>\\n            </fieldset>\\n\\n            <fieldset>\\n                <legend>{{ $tc('klaviyo-integration-settings.pop-up.snippet-button-fieldset-label') }}</legend>\\n                <sw-container columns=\\\"5fr 5fr\\\" gap=\\\"16px\\\">\\n                    {% block klaviyo_integration_settings_pop_up_open_button_snippet %}\\n                        <sw-field\\n                                :label=\\\"$tc('klaviyo-integration-settings.pop-up.openBtnLabel')\\\"\\n                                type=\\\"text\\\"\\n                                value=\\\"klaviyo.back-in-stock.modal.openBtnLabel\\\"\\n                                disabled></sw-field>\\n                    {% endblock %}\\n\\n                    {% block klaviyo_integration_settings_pop_up_close_button_snippet %}\\n                        <sw-field\\n                                :label=\\\"$tc('klaviyo-integration-settings.pop-up.closeBtnLabel')\\\"\\n                                type=\\\"text\\\"\\n                                value=\\\"klaviyo.back-in-stock.modal.closeBtnLabel\\\"\\n                                disabled></sw-field>\\n                    {% endblock %}\\n                </sw-container>\\n\\n                <sw-container columns=\\\"5fr 5fr\\\" gap=\\\"16px\\\">\\n                    {% block klaviyo_integration_settings_pop_up_email_field_label_snippet %}\\n                        <sw-field\\n                                :label=\\\"$tc('klaviyo-integration-settings.pop-up.emailFieldLabel')\\\"\\n                                type=\\\"text\\\"\\n                                value=\\\"klaviyo.back-in-stock.modal.email\\\"\\n                                disabled></sw-field>\\n                    {% endblock %}\\n\\n                    {% block klaviyo_integration_settings_pop_up_close_button_snippet %}\\n                        <sw-field\\n                                :label=\\\"$tc('klaviyo-integration-settings.pop-up.emailFieldPlaceholder')\\\"\\n                                type=\\\"text\\\"\\n                                value=\\\"klaviyo.back-in-stock.modal.email-placeholder\\\"\\n                                disabled></sw-field>\\n                    {% endblock %}\\n                </sw-container>\\n\\n                <sw-container columns=\\\"5fr 5fr\\\" gap=\\\"16px\\\">\\n\\n                    {% block klaviyo_integration_settings_pop_up_subscribe_button_snippet %}\\n                        <sw-field\\n                                :label=\\\"$tc('klaviyo-integration-settings.pop-up.subscribeBtnLabel')\\\"\\n                                type=\\\"text\\\"\\n                                value=\\\"klaviyo.back-in-stock.modal.subscribeBtnLabel\\\"\\n                                disabled></sw-field>\\n                    {% endblock %}\\n\\n                    {% block klaviyo_integration_settings_pop_up_subscribe_checkbox_snippet %}\\n                        <sw-field\\n                                :label=\\\"$tc('klaviyo-integration-settings.pop-up.subscribeCheckboxLabel')\\\"\\n                                type=\\\"text\\\"\\n                                value=\\\"klaviyo.back-in-stock.modal.subscribe-to-newsletter\\\"\\n                                disabled></sw-field>\\n                    {% endblock %}\\n                </sw-container>\\n\\n                <sw-container columns=\\\"5fr 5fr\\\" gap=\\\"16px\\\">\\n                    {% block klaviyo_integration_settings_pop_up_content_message_snippet %}\\n                        <sw-field\\n                                :label=\\\"$tc('klaviyo-integration-settings.pop-up.contentMessageLabel')\\\"\\n                                type=\\\"text\\\"\\n                                value=\\\"klaviyo.back-in-stock.modal.contentMessage\\\"\\n                                disabled></sw-field>\\n                    {% endblock %}\\n                </sw-container>\\n            </fieldset>\\n\\n            <fieldset>\\n                <legend>{{ $tc('klaviyo-integration-settings.pop-up.additional-classes-fieldset-label') }}</legend>\\n                <sw-container gap=\\\"16px\\\">\\n                    {% block klaviyo_integration_settings_pop_up_additional_classes %}\\n                        <sw-inherit-wrapper\\n                                v-model=\\\"actualConfigData['KlaviyoIntegrationPlugin.config.popUpAdditionalClasses']\\\"\\n                                :inheritedValue=\\\"selectedSalesChannelId === null ? null : allConfigs['null']['KlaviyoIntegrationPlugin.config.popUpAdditionalClasses']\\\"\\n                                :customInheritationCheckFunction=\\\"checkTextFieldInheritance\\\">\\n                            <template #content=\\\"props\\\">\\n                                <sw-field\\n                                        type=\\\"text\\\"\\n                                        :map-inheritance=\\\"props\\\"\\n                                        :value=\\\"props.currentValue\\\"\\n                                        :disabled=\\\"props.isInherited\\\"\\n                                        name=\\\"KlaviyoIntegrationPlugin.config.popUpAdditionalClasses\\\"\\n                                        @input=\\\"props.updateCurrentValue\\\"></sw-field>\\n                            </template>\\n                        </sw-inherit-wrapper>\\n                    {% endblock %}\\n                </sw-container>\\n            </fieldset>\\n        </sw-card>\\n    </div>\\n{% endblock %}\\n\";"],"sourceRoot":""}